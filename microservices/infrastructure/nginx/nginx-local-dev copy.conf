events {
    worker_connections 1024; # Número de conexões por worker process
}

http {
    # Define os upstreams para cada microsserviço.
    # 'host.docker.internal' é usado para que o contêiner Nginx possa se comunicar
    # com os microsserviços rodando diretamente na máquina host.
    # As portas são as portas padrão de cada microsserviço (conforme application.yml de cada um).
    upstream auth_service_local {
        server host.docker.internal:8081; # Porta do Auth Service
    }
    upstream user_profile_service_local {
        server host.docker.internal:8082; # Porta do User Profile Service
    }
    upstream lawyer_profile_service_local {
        server host.docker.internal:8083; # Porta do Lawyer Profile Service
    }
    upstream service_scheduling_service_local {
        server host.docker.internal:8084; # Porta do Service Scheduling Service
    }
    upstream payment_subscription_service_local {
        server host.docker.internal:8085; # Porta do Payment Subscription Service
    }
    upstream communication_lead_service_local {
        server host.docker.internal:8086; # Porta do Communication Lead Service
    }
    upstream review_visit_service_local {
        server host.docker.internal:8087; # Porta do Review Visit Service
    }
    upstream admin_platform_service_local {
        server host.docker.internal:8088; # Porta do Admin Platform Service
    }
    upstream public_api_gateway_local {
        server host.docker.internal:8089; # Porta do Public API Gateway
    }

    # Bloco de servidor HTTP (porta 80) para redirecionamento para HTTPS
    server {
        listen 80; # Nginx escutando na porta 80 (HTTP)
        server_name localhost; # Para acesso local via localhost
        # Redireciona todas as requisições HTTP para HTTPS.
        # Em desenvolvimento, você pode comentar esta linha se não estiver usando HTTPS localmente.
        return 301 https://$host$request_uri;
    }

    # Bloco de servidor HTTPS (porta 443)
    server {
        listen 443 ssl; # Nginx escutando na porta 443 (HTTPS)
        server_name localhost; # Para acesso local via localhost

        # Configuração SSL/TLS para desenvolvimento local.
        # Certifique-se de que estes arquivos existam no contêiner Nginx
        # (montados a partir do seu sistema de arquivos local).
        ssl_certificate /etc/nginx/certs/legalconnect-dev.crt;
        ssl_certificate_key /etc/nginx/certs/legalconnect-dev.key;
        ssl_protocols TLSv1.2 TLSv1.3; # Protocolos SSL/TLS seguros
        ssl_prefer_server_ciphers on; # Preferir cifras do servidor
        ssl_ciphers HIGH:!aNULL:!MD5; # Cifras seguras

        # Configurações de segurança adicionais para cabeçalhos HTTP (boas práticas)
        add_header X-Frame-Options "DENY"; # Previne clickjacking
        add_header X-Content-Type-Options "nosniff"; # Previne MIME-sniffing
        add_header X-XSS-Protection "1; mode=block"; # Proteção contra XSS
        add_header Referrer-Policy "no-referrer-when-downgrade"; # Controle de informações do referrer

        # Configuração de validação JWT para o Nginx.
        # O Nginx buscará o JWKS (JSON Web Key Set) do endpoint público do auth-service.
        # Este endpoint deve ser acessível pelo Nginx (host.docker.internal).
        # O Nginx irá armazenar em cache e periodicamente atualizar as chaves.
        auth_jwt_key_file "http://host.docker.internal:8081/.well-known/jwks.json";
        auth_jwt_realm "LegalConnect Protected Area"; # Nome do realm para o desafio de autenticação (aparece em erros 401)

        # ---------------------------------------------------------------------
        # Roteamento para Microsserviços e Aplicação de Validação JWT
        # ---------------------------------------------------------------------

        # Roteamento para o serviço de autenticação (endpoints públicos que não precisam de JWT)
        # Este é o serviço que EMITE o token, então suas rotas de login/refresh não devem validar JWT.
        location /api/v1/public/auth/ {
            proxy_pass http://auth_service_local/api/v1/public/auth/;
            proxy_set_header Host $host; # Preserva o cabeçalho Host original
            proxy_set_header X-Real-IP $remote_addr; # Endereço IP real do cliente
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Cadeia de proxies
            proxy_set_header X-Forwarded-Proto $scheme; # Protocolo original (HTTP/HTTPS)
        }

        # Endpoint para o JWKS (chave pública do JWT)
        # Este endpoint é público para que o Nginx e outros clientes possam obter as chaves de validação.
        location /.well-known/jwks.json {
            proxy_pass http://auth_service_local/.well-known/jwks.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o serviço de perfil de usuário (PROTEGIDO por JWT)
        # Exemplo de consumo: /api/v1/users/me, /api/v1/users/{id}
        location /api/v1/users/ {
            auth_jwt "on"; # Ativa a validação JWT para este endpoint
            # Extrai claims do JWT e os injeta como cabeçalhos HTTP para o microsserviço
            proxy_set_header X-User-ID $jwt_claim_sub; # 'sub' é a claim padrão para o ID do sujeito (usuário)
            proxy_set_header X-User-Roles $jwt_claim_roles; # Assume que o JWT tem uma claim 'roles'
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId; # Assume que o JWT tem uma claim 'tenantId'

            proxy_pass http://user_profile_service_local/api/v1/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o serviço de perfil de advogado (endpoints PROTEGIDOS)
        # Exemplo de consumo: /api/v1/advogados/me, /api/v1/advogados/documents
        location /api/v1/advogados/me/ {
            auth_jwt "on"; # Ativa a validação JWT
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://lawyer_profile_service_local/api/v1/advogados/me/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/v1/advogados/documents/ {
            auth_jwt "on"; # Ativa a validação JWT
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://lawyer_profile_service_local/api/v1/advogados/documents/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        # Roteamento para o serviço de serviços e agendamento (endpoints PROTEGIDOS)
        # Exemplo de consumo: /api/v1/servicos, /api/v1/agendamentos
        location /api/v1/servicos/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://service_scheduling_service_local/api/v1/servicos/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/v1/agendamentos/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://service_scheduling_service_local/api/v1/agendamentos/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o serviço de pagamento e assinatura (endpoints PROTEGIDOS)
        # Exemplo de consumo: /api/v1/planos, /api/v1/assinaturas
        location /api/v1/planos/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://payment_subscription_service_local/api/v1/planos/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/v1/assinaturas/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://payment_subscription_service_local/api/v1/assinaturas/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o serviço de comunicação e leads (endpoints PROTEGIDOS)
        # Exemplo de consumo: /api/v1/mensagens, /api/v1/leads
        location /api/v1/mensagens/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://communication_lead_service_local/api/v1/mensagens/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/v1/leads/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://communication_lead_service_local/api/v1/leads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o serviço de avaliação e visita (endpoints PROTEGIDOS)
        # Exemplo de consumo: /api/v1/avaliacoes, /api/v1/perfil-visits
        location /api/v1/avaliacoes/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://review_visit_service_local/api/v1/avaliacoes/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/v1/perfil-visits/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://review_visit_service_local/api/v1/perfil-visits/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o serviço de administração da plataforma (endpoints PROTEGIDOS)
        # Exemplo de consumo: /api/v1/admin
        location /api/v1/admin/ {
            auth_jwt "on";
            proxy_set_header X-User-ID $jwt_claim_sub;
            proxy_set_header X-User-Roles $jwt_claim_roles;
            proxy_set_header X-Tenant-ID $jwt_claim_tenantId;
            proxy_pass http://admin_platform_service_local/api/v1/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Roteamento para o Public API Gateway (endpoints PÚBLICOS que NÃO requerem JWT)
        # Estes endpoints são acessíveis sem autenticação forte na borda.
        location /api/v1/public/advogados/ {
            proxy_pass http://public_api_gateway_local/api/v1/advogados/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-ID $http_x_tenant_id; # Pode ser necessário se a API pública também for multi-tenant
        }
        location /api/v1/public/agendamentos/ {
            proxy_pass http://public_api_gateway_local/api/v1/agendamentos/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-ID $http_x_tenant_id;
        }
        location /api/v1/public/avaliacoes/ {
            proxy_pass http://public_api_gateway_local/api/v1/avaliacoes/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-ID $http_x_tenant_id;
        }
        location /api/v1/public/ { # Catch-all para outros endpoints públicos genéricos
            proxy_pass http://public_api_gateway_local/api/v1/public/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-ID $http_x_tenant_id;
        }

        # Roteamento para documentação da API (Swagger UI) - geralmente não protegido por JWT
        location /v3/api-docs/ {
            proxy_pass http://public_api_gateway_local/v3/api-docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /swagger-ui/ {
            proxy_pass http://public_api_gateway_local/swagger-ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Fallback para qualquer outra requisição não mapeada
        location / {
            return 404 "Recurso não encontrado no LegalConnect API Gateway.";
            add_header Content-Type text/plain;
        }
    }
}

# docker run --name legalconnect-nginx-local -p 80:80   -v E:/legalconnect/microservices/infrastructure/nginx/nginx-local-dev.conf:/etc/nginx/nginx.conf:ro            nginx:latest
# docker run --name legalconnect-nginx-local -p 80:80 -p 443:443  -v E:/legalconnect/microservices/infrastructure/nginx/nginx-local-dev.conf:/etc/nginx/nginx.conf:ro   -v E:/legalconnect/infrastructure/nginx/certs:/etc/nginx/certs:ro  legalconnect-nginx-jwt:latest
# docker run --name legalconnect-nginx-local -p 80:80 -p 443:443  -v E:/legalconnect/microservices/infrastructure/nginx/nginx-local-dev.conf:/etc/nginx/nginx.conf:ro   -v E:/legalconnect/infrastructure/nginx/certs:/etc/nginx/certs:ro  legalconnect-nginx-jwt:latest 

