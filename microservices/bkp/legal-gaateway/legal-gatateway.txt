```java
/mvnw text eol=lf
*.cmd text eol=crlf

```
```java
HELP.md
target/
.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
build/
!**/src/main/**/build/
!**/src/test/**/build/

### VS Code ###
.vscode/

```
```java
# Read Me First
The following was discovered as part of building this project:

* The original package name 'br.com.legalconnect.common.common-lib' is invalid and this project uses 'br.com.legalconnect.common.common_lib' instead.

# Getting Started

### Reference Documentation
For further reference, please consider the following sections:

* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/3.5.3/maven-plugin)
* [Create an OCI image](https://docs.spring.io/spring-boot/3.5.3/maven-plugin/build-image.html)
* [Flyway Migration](https://docs.spring.io/spring-boot/3.5.3/how-to/data-initialization.html#howto.data-initialization.migration-tool.flyway)
* [Spring Boot DevTools](https://docs.spring.io/spring-boot/3.5.3/reference/using/devtools.html)

### Maven Parent overrides

Due to Maven's design, elements are inherited from the parent POM to the project POM.
While most of the inheritance is fine, it also inherits unwanted elements like `<license>` and `<developers>` from the parent.
To prevent this, the project POM contains empty overrides for these elements.
If you manually switch to a different parent and actually want the inheritance, you need to remove those overrides.


```
```java
#!/bin/sh
# ----------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# Apache Maven Wrapper startup batch script, version 3.3.2
#
# Optional ENV vars
# -----------------
#   JAVA_HOME - location of a JDK home dir, required when download maven via java source
#   MVNW_REPOURL - repo url base for downloading maven distribution
#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven
#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output
# ----------------------------------------------------------------------------

set -euf
[ "${MVNW_VERBOSE-}" != debug ] || set -x

# OS specific support.
native_path() { printf %s\\n "$1"; }
case "$(uname)" in
CYGWIN* | MINGW*)
  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"
  native_path() { cygpath --path --windows "$1"; }
  ;;
esac

# set JAVACMD and JAVACCMD
set_java_home() {
  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched
  if [ -n "${JAVA_HOME-}" ]; then
    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
      JAVACCMD="$JAVA_HOME/jre/sh/javac"
    else
      JAVACMD="$JAVA_HOME/bin/java"
      JAVACCMD="$JAVA_HOME/bin/javac"

      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then
        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2
        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2
        return 1
      fi
    fi
  else
    JAVACMD="$(
      'set' +e
      'unset' -f command 2>/dev/null
      'command' -v java
    )" || :
    JAVACCMD="$(
      'set' +e
      'unset' -f command 2>/dev/null
      'command' -v javac
    )" || :

    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then
      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2
      return 1
    fi
  fi
}

# hash string like Java String::hashCode
hash_string() {
  str="${1:-}" h=0
  while [ -n "$str" ]; do
    char="${str%"${str#?}"}"
    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))
    str="${str#?}"
  done
  printf %x\\n $h
}

verbose() { :; }
[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }

die() {
  printf %s\\n "$1" >&2
  exit 1
}

trim() {
  # MWRAPPER-139:
  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.
  #   Needed for removing poorly interpreted newline sequences when running in more
  #   exotic environments such as mingw bash on Windows.
  printf "%s" "${1}" | tr -d '[:space:]'
}

# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties
while IFS="=" read -r key value; do
  case "${key-}" in
  distributionUrl) distributionUrl=$(trim "${value-}") ;;
  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;
  esac
done <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"
[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"

case "${distributionUrl##*/}" in
maven-mvnd-*bin.*)
  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/
  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in
  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;
  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;
  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;
  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;
  *)
    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2
    distributionPlatform=linux-amd64
    ;;
  esac
  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"
  ;;
maven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;
*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;
esac

# apply MVNW_REPOURL and calculate MAVEN_HOME
# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>
[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"
distributionUrlName="${distributionUrl##*/}"
distributionUrlNameMain="${distributionUrlName%.*}"
distributionUrlNameMain="${distributionUrlNameMain%-bin}"
MAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"
MAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"

exec_maven() {
  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :
  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"
}

if [ -d "$MAVEN_HOME" ]; then
  verbose "found existing MAVEN_HOME at $MAVEN_HOME"
  exec_maven "$@"
fi

case "${distributionUrl-}" in
*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;
*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;
esac

# prepare tmp dir
if TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then
  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }
  trap clean HUP INT TERM EXIT
else
  die "cannot create temp dir"
fi

mkdir -p -- "${MAVEN_HOME%/*}"

# Download and Install Apache Maven
verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."
verbose "Downloading from: $distributionUrl"
verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"

# select .zip or .tar.gz
if ! command -v unzip >/dev/null; then
  distributionUrl="${distributionUrl%.zip}.tar.gz"
  distributionUrlName="${distributionUrl##*/}"
fi

# verbose opt
__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''
[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v

# normalize http auth
case "${MVNW_PASSWORD:+has-password}" in
'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;
has-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;
esac

if [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then
  verbose "Found wget ... using wget"
  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"
elif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then
  verbose "Found curl ... using curl"
  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"
elif set_java_home; then
  verbose "Falling back to use Java to download"
  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"
  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"
  cat >"$javaSource" <<-END
	public class Downloader extends java.net.Authenticator
	{
	  protected java.net.PasswordAuthentication getPasswordAuthentication()
	  {
	    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );
	  }
	  public static void main( String[] args ) throws Exception
	  {
	    setDefault( new Downloader() );
	    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );
	  }
	}
	END
  # For Cygwin/MinGW, switch paths to Windows format before running javac and java
  verbose " - Compiling Downloader.java ..."
  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"
  verbose " - Running Downloader.java ..."
  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"
fi

# If specified, validate the SHA-256 sum of the Maven distribution zip file
if [ -n "${distributionSha256Sum-}" ]; then
  distributionSha256Result=false
  if [ "$MVN_CMD" = mvnd.sh ]; then
    echo "Checksum validation is not supported for maven-mvnd." >&2
    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2
    exit 1
  elif command -v sha256sum >/dev/null; then
    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then
      distributionSha256Result=true
    fi
  elif command -v shasum >/dev/null; then
    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then
      distributionSha256Result=true
    fi
  else
    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2
    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2
    exit 1
  fi
  if [ $distributionSha256Result = false ]; then
    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2
    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2
    exit 1
  fi
fi

# unzip and move
if command -v unzip >/dev/null; then
  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"
else
  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"
fi
printf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"
mv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"

clean || :
exec_maven "$@"

```
```java
<# : batch portion
@REM ----------------------------------------------------------------------------
@REM Licensed to the Apache Software Foundation (ASF) under one
@REM or more contributor license agreements.  See the NOTICE file
@REM distributed with this work for additional information
@REM regarding copyright ownership.  The ASF licenses this file
@REM to you under the Apache License, Version 2.0 (the
@REM "License"); you may not use this file except in compliance
@REM with the License.  You may obtain a copy of the License at
@REM
@REM    http://www.apache.org/licenses/LICENSE-2.0
@REM
@REM Unless required by applicable law or agreed to in writing,
@REM software distributed under the License is distributed on an
@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
@REM KIND, either express or implied.  See the License for the
@REM specific language governing permissions and limitations
@REM under the License.
@REM ----------------------------------------------------------------------------

@REM ----------------------------------------------------------------------------
@REM Apache Maven Wrapper startup batch script, version 3.3.2
@REM
@REM Optional ENV vars
@REM   MVNW_REPOURL - repo url base for downloading maven distribution
@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven
@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output
@REM ----------------------------------------------------------------------------

@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)
@SET __MVNW_CMD__=
@SET __MVNW_ERROR__=
@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%
@SET PSModulePath=
@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @(
  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)
)
@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%
@SET __MVNW_PSMODULEP_SAVE=
@SET __MVNW_ARG0_NAME__=
@SET MVNW_USERNAME=
@SET MVNW_PASSWORD=
@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)
@echo Cannot start maven from wrapper >&2 && exit /b 1
@GOTO :EOF
: end batch / begin powershell #>

$ErrorActionPreference = "Stop"
if ($env:MVNW_VERBOSE -eq "true") {
  $VerbosePreference = "Continue"
}

# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties
$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl
if (!$distributionUrl) {
  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"
}

switch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {
  "maven-mvnd-*" {
    $USE_MVND = $true
    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"
    $MVN_CMD = "mvnd.cmd"
    break
  }
  default {
    $USE_MVND = $false
    $MVN_CMD = $script -replace '^mvnw','mvn'
    break
  }
}

# apply MVNW_REPOURL and calculate MAVEN_HOME
# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>
if ($env:MVNW_REPOURL) {
  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }
  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"
}
$distributionUrlName = $distributionUrl -replace '^.*/',''
$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''
$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"
if ($env:MAVEN_USER_HOME) {
  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"
}
$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''
$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"

if (Test-Path -Path "$MAVEN_HOME" -PathType Container) {
  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"
  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"
  exit $?
}

if (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {
  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"
}

# prepare tmp dir
$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile
$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"
$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null
trap {
  if ($TMP_DOWNLOAD_DIR.Exists) {
    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }
    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }
  }
}

New-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null

# Download and Install Apache Maven
Write-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."
Write-Verbose "Downloading from: $distributionUrl"
Write-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"

$webclient = New-Object System.Net.WebClient
if ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {
  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)
}
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null

# If specified, validate the SHA-256 sum of the Maven distribution zip file
$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum
if ($distributionSha256Sum) {
  if ($USE_MVND) {
    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."
  }
  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash
  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {
    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."
  }
}

# unzip and move
Expand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null
Rename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null
try {
  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null
} catch {
  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {
    Write-Error "fail to move MAVEN_HOME"
  }
} finally {
  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }
  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }
}

Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"

```
```java
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version> <!-- Usando 3.2.5, uma versão estável do Spring Boot 3 -->
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.com.legalconnect</groupId>
	<artifactId>gateway</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>legalconnect-gateway</name>
	<description>API Gateway for LegalConnect Microservices</description>

	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
	</properties>

	<dependencies>
		<!-- Spring Cloud Gateway -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>

		<!-- Service Discovery (Eureka) -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- Swagger para documentação do Gateway -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.12.6</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>
		<!-- common-lib (se aplicável, mantenha a versão correta) -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.20</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
```
```java
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
wrapperVersion=3.3.2
distributionType=only-script
distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.10/apache-maven-3.9.10-bin.zip

```
```java
{
  "configurations": [
    {
      "type": "java",
      "name": "Spring Boot-LegalconnectGatewayApplication<gateway>",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "mainClass": "br.com.legalconnect.gateway.LegalconnectGatewayApplication",
      "projectName": "gateway",
      "args": "",
      "envFile": "${workspaceFolder}/.env"
    }
  ]
}

```
```java
{
  "java.configuration.updateBuildConfiguration": "interactive"
}

```
```java
2025-07-19T00:04:15.152-03:00  INFO 15528 --- [api-gateway] [main] b.c.l.g.LegalconnectGatewayApplication   : Starting LegalconnectGatewayApplication using Java 17.0.14 with PID 15528 (E:\legalconnect\legalconnect\microservices\legal-gaateway\target\classes started by marce in E:\legalconnect\legalconnect\microservices\legal-gaateway)
2025-07-19T00:04:15.157-03:00  INFO 15528 --- [api-gateway] [main] b.c.l.g.LegalconnectGatewayApplication   : The following 1 profile is active: "prod"
2025-07-19T00:04:16.294-03:00  INFO 15528 --- [api-gateway] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=5f08001b-9a87-30ca-868e-5ada63b5f73e
2025-07-19T00:04:16.371-03:00  WARN 15528 --- [api-gateway] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-19T00:04:16.375-03:00  WARN 15528 --- [api-gateway] [main] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-19T00:04:16.377-03:00  WARN 15528 --- [api-gateway] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-07-19T00:04:16.379-03:00  WARN 15528 --- [api-gateway] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-19T00:04:16.381-03:00  WARN 15528 --- [api-gateway] [main] trationDelegate$BeanPostProcessorChecker : Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-07-19T00:04:17.438-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [After]
2025-07-19T00:04:17.439-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Before]
2025-07-19T00:04:17.440-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Between]
2025-07-19T00:04:17.440-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Cookie]
2025-07-19T00:04:17.440-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Header]
2025-07-19T00:04:17.440-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Host]
2025-07-19T00:04:17.441-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Method]
2025-07-19T00:04:17.441-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Path]
2025-07-19T00:04:17.441-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Query]
2025-07-19T00:04:17.441-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [ReadBody]
2025-07-19T00:04:17.442-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [RemoteAddr]
2025-07-19T00:04:17.442-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2025-07-19T00:04:17.442-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [Weight]
2025-07-19T00:04:17.442-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.g.r.RouteDefinitionRouteLocator    : Loaded RoutePredicateFactory [CloudFoundryRouteService]
2025-07-19T00:04:17.939-03:00  INFO 15528 --- [api-gateway] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-07-19T00:04:18.093-03:00  WARN 15528 --- [api-gateway] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-07-19T00:04:18.162-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2025-07-19T00:04:18.195-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2025-07-19T00:04:18.200-03:00  INFO 15528 --- [api-gateway] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2025-07-19T00:04:18.224-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2025-07-19T00:04:18.226-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2025-07-19T00:04:18.226-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2025-07-19T00:04:18.227-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2025-07-19T00:04:18.227-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2025-07-19T00:04:18.227-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2025-07-19T00:04:18.227-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2025-07-19T00:04:18.629-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2025-07-19T00:04:18.632-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2025-07-19T00:04:18.634-03:00  INFO 15528 --- [api-gateway] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-07-19T00:04:18.642-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1752894258641 with initial instances count: 1
2025-07-19T00:04:18.644-03:00  INFO 15528 --- [api-gateway] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application API-GATEWAY with eureka with status UP
2025-07-19T00:04:18.646-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1752894258646, current=UP, previous=STARTING]
2025-07-19T00:04:18.649-03:00  INFO 15528 --- [api-gateway] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY/host.docker.internal:api-gateway:8080: registering service...
2025-07-19T00:04:18.701-03:00  INFO 15528 --- [api-gateway] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY/host.docker.internal:api-gateway:8080 - registration status: 204
2025-07-19T00:04:18.699-03:00 ERROR 15528 --- [api-gateway] [main] o.s.c.gateway.route.CachingRouteLocator  : Refresh routes error !!!

java.lang.IllegalArgumentException: Unable to find GatewayFilterFactory with name name
	at org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:145) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.getFilters(RouteDefinitionRouteLocator.java:186) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.convertToRoute(RouteDefinitionRouteLocator.java:132) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:492) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:424) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.drain(FluxMergeSequential.java:439) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.innerComplete(FluxMergeSequential.java:335) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialInner.onSubscribe(FluxMergeSequential.java:559) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:237) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onSubscribe(FluxMergeSequential.java:198) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:237) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onSubscribe(FluxMergeSequential.java:198) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Mono.subscribeWith(Mono.java:4634) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4534) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4470) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Mono.subscribe(Mono.java:4442) ~[reactor-core-3.6.5.jar:3.6.5]
	at org.springframework.cloud.gateway.route.CachingRouteLocator.onApplicationEvent(CachingRouteLocator.java:100) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.CachingRouteLocator.onApplicationEvent(CachingRouteLocator.java:42) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.cloud.gateway.route.RouteRefreshListener.reset(RouteRefreshListener.java:73) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.RouteRefreshListener.onApplicationEvent(RouteRefreshListener.java:54) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:91) ~[spring-cloud-netflix-eureka-client-4.1.1.jar:4.1.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471) ~[spring-context-6.1.6.jar:6.1.6]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.5.jar:3.2.5]
	at br.com.legalconnect.gateway.LegalconnectGatewayApplication.main(LegalconnectGatewayApplication.java:18) ~[classes/:na]

2025-07-19T00:04:18.715-03:00  WARN 15528 --- [api-gateway] [main] onfigReactiveWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'eurekaAutoServiceRegistration'
2025-07-19T00:04:18.723-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2025-07-19T00:04:21.733-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2025-07-19T00:04:21.742-03:00  INFO 15528 --- [api-gateway] [main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at br.com.legalconnect.gateway.LegalconnectGatewayApplication.main(LegalconnectGatewayApplication.java:18)

2025-07-19T00:04:21.744-03:00  WARN 15528 --- [api-gateway] [main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: Connection pool shut down
2025-07-19T00:04:21.749-03:00  INFO 15528 --- [api-gateway] [main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:298)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:96)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:115)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:95)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at br.com.legalconnect.gateway.LegalconnectGatewayApplication.main(LegalconnectGatewayApplication.java:18)

2025-07-19T00:04:21.749-03:00  WARN 15528 --- [api-gateway] [main] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: Connection pool shut down
2025-07-19T00:04:21.750-03:00 ERROR 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-GATEWAY/host.docker.internal:api-gateway:8080 - de-registration failedCannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.5.jar:3.2.5]
	at br.com.legalconnect.gateway.LegalconnectGatewayApplication.main(LegalconnectGatewayApplication.java:18) ~[classes/:na]

2025-07-19T00:04:21.756-03:00  INFO 15528 --- [api-gateway] [main] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2025-07-19T00:04:21.770-03:00  INFO 15528 --- [api-gateway] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-19T00:04:21.790-03:00 ERROR 15528 --- [api-gateway] [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.context.ApplicationContextException: Failed to start bean 'eurekaAutoServiceRegistration'
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:291) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471) ~[spring-context-6.1.6.jar:6.1.6]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) ~[na:na]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.5.jar:3.2.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.5.jar:3.2.5]
	at br.com.legalconnect.gateway.LegalconnectGatewayApplication.main(LegalconnectGatewayApplication.java:18) ~[classes/:na]
Caused by: java.lang.IllegalArgumentException: Unable to find GatewayFilterFactory with name name
	at org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.loadGatewayFilters(RouteDefinitionRouteLocator.java:145) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.getFilters(RouteDefinitionRouteLocator.java:186) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator.convertToRoute(RouteDefinitionRouteLocator.java:132) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.tryEmitScalar(FluxFlatMap.java:492) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:424) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.drain(FluxMergeSequential.java:439) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.innerComplete(FluxMergeSequential.java:335) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialInner.onSubscribe(FluxMergeSequential.java:559) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:237) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onSubscribe(FluxMergeSequential.java:198) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:237) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:335) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:294) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onSubscribe(FluxMergeSequential.java:198) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840) ~[reactor-core-3.6.5.jar:3.6.5]
	at reactor.core.publisher.Flux.blockLast(Flux.java:2816) ~[reactor-core-3.6.5.jar:3.6.5]
	at org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter.lambda$onApplicationEvent$3(WeightCalculatorWebFilter.java:156) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.ifAvailable(DefaultListableBeanFactory.java:2126) ~[spring-beans-6.1.6.jar:6.1.6]
	at org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter.onApplicationEvent(WeightCalculatorWebFilter.java:156) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.cloud.gateway.route.RouteRefreshListener.reset(RouteRefreshListener.java:73) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.cloud.gateway.route.RouteRefreshListener.onApplicationEvent(RouteRefreshListener.java:54) ~[spring-cloud-gateway-server-4.1.2.jar:4.1.2]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384) ~[spring-context-6.1.6.jar:6.1.6]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:91) ~[spring-cloud-netflix-eureka-client-4.1.1.jar:4.1.1]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288) ~[spring-context-6.1.6.jar:6.1.6]
	... 13 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104) ~[reactor-core-3.6.5.jar:3.6.5]
		at reactor.core.publisher.Flux.blockLast(Flux.java:2817) ~[reactor-core-3.6.5.jar:3.6.5]
		... 30 common frames omitted


```
```java
{
  "openapi": "3.0.1",
  "info": {
    "title": "LegalConnect Gateway API",
    "description": "API Gateway para o sistema LegalConnect",
    "version": "1.0"
  },
  "servers": [
    { "url": "http://192.168.1.4:54557", "description": "Generated server url" }
  ],
  "security": [{ "JWT": [] }],
  "paths": {
    "/api/v1/auth/socios/registrar": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "registerSocio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/senhas/redefinir": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/senhas/recuperar": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "recoverPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/BaseResponseVoid" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequestDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/clientes/registrar": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "registerClient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/advogados/registrar": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "registerAdvogado",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseUserResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/administradores/registrar": {
      "post": {
        "tags": ["auth-controller"],
        "operationId": "registerAdmin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseUserResponseDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistrationRequest": {
        "required": ["cpf", "email", "nomeCompleto", "senha", "userType"],
        "type": "object",
        "properties": {
          "nomeCompleto": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "email": { "maxLength": 255, "minLength": 0, "type": "string" },
          "cpf": {
            "pattern": "^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$",
            "type": "string"
          },
          "telefone": { "maxLength": 20, "minLength": 0, "type": "string" },
          "senha": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          },
          "userType": { "type": "string" }
        }
      },
      "BaseResponseUserResponseDTO": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["SUCESSO", "ERRO", "AVISO"] },
          "message": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" },
          "data": { "$ref": "#/components/schemas/UserResponseDTO" },
          "errors": { "type": "array", "items": { "type": "string" } }
        }
      },
      "UserResponseDTO": {
        "type": "object",
        "properties": {
          "nomeCompleto": { "type": "string" },
          "email": { "type": "string" },
          "cpf": { "type": "string" },
          "telefone": { "type": "string" },
          "fotoUrl": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "ResetPasswordRequest": {
        "required": ["novaSenha", "token"],
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "novaSenha": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "BaseResponseVoid": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["SUCESSO", "ERRO", "AVISO"] },
          "message": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" },
          "data": { "type": "object" },
          "errors": { "type": "array", "items": { "type": "string" } }
        }
      },
      "RecoverPasswordRequest": {
        "required": ["email"],
        "type": "object",
        "properties": { "email": { "type": "string" } }
      },
      "RefreshTokenRequestDTO": {
        "required": ["refreshToken"],
        "type": "object",
        "properties": { "refreshToken": { "type": "string" } }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": { "type": "string" },
          "refreshToken": { "type": "string" },
          "tokenType": { "type": "string" },
          "expiresIn": { "type": "integer", "format": "int64" }
        }
      },
      "BaseResponseAuthResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["SUCESSO", "ERRO", "AVISO"] },
          "message": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" },
          "data": { "$ref": "#/components/schemas/AuthResponse" },
          "errors": { "type": "array", "items": { "type": "string" } }
        }
      },
      "LoginRequestDTO": {
        "required": ["email", "senha"],
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "senha": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "name": "JWT",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

```
```java
```java
package br.com.legalconnect.gateway;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;

@SpringBootApplication
@EnableDiscoveryClient
public class LegalconnectGatewayApplication {

	public static void main(String[] args) {
		SpringApplication.run(LegalconnectGatewayApplication.class, args);
	}

}

```
```java
package br.com.legalconnect.gateway.config;

import java.net.URI;

import org.springframework.cloud.client.discovery.DiscoveryClient;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class GatewayConfig {

    // Este bean é para permitir o roteamento dinâmico no application.yml
    // para o Swagger, onde precisamos pegar o URI de qualquer serviço.
    @Bean
    public CustomDiscoveryClientService customDiscoveryClientService(DiscoveryClient discoveryClient) {
        return new CustomDiscoveryClientService(discoveryClient);
    }

    public static class CustomDiscoveryClientService {
        private final DiscoveryClient discoveryClient;

        public CustomDiscoveryClientService(DiscoveryClient discoveryClient) {
            this.discoveryClient = discoveryClient;
        }

        public URI getServiceUri() {
            // Este método será usado no application.yml para resolver o URI dinamicamente.
            // Para o Swagger, precisamos de um URI genérico para que o Gateway possa
            // proxyar requisições para qualquer serviço.
            // Em um cenário real, você pode querer listar todos os serviços
            // e construir as rotas do Swagger dinamicamente em tempo de execução
            // ou ter um serviço de agregação de Swagger.
            // Aqui, apenas retornamos um URI base para o balanceador de carga.
            return URI.create("lb://");
        }
    }

}

```
```java
package br.com.legalconnect.gateway.config;

import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.route.RouteLocator;
import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class GatewayRouteConfig {
        private final GatewayFilter jwtFilter;

        public GatewayRouteConfig(GatewayFilter jwtFilter) {
                this.jwtFilter = jwtFilter;
        }
        // @Bean
        // public RouteLocator customRouteLocator(RouteLocatorBuilder builder) {
        // return builder.routes()
        // // Swagger AUTH
        // .route("swagger-ui-auth", r -> r.path("/auth/swagger-ui/**")
        // .filters(f -> f.rewritePath("/auth/swagger-ui/(?<segment>.*)",
        // "/swagger-ui/${segment}"))
        // .uri("lb://AUTH-SERVICE"))
        // // API Docs AUTH
        // .route("api-docs-auth", r -> r.path("/auth/v3/api-docs/**")
        // .filters(f -> f.rewritePath("/auth/v3/api-docs/(?<segment>.*)",
        // "/v3/api-docs/${segment}"))
        // .uri("lb://AUTH-SERVICE"))
        // // Swagger USUARIO
        // .route("swagger-ui-usuario", r -> r.path("/usuario/swagger-ui/**")
        // .filters(f -> f.rewritePath("/usuario/swagger-ui/(?<segment>.*)",
        // "/swagger-ui/${segment}"))
        // .uri("lb://LEGALCONNECT-USUARIO-SERVICE"))
        // // API Docs USUARIO
        // .route("api-docs-usuario", r -> r.path("/usuario/v3/api-docs/**")
        // .filters(f -> f.rewritePath("/usuario/v3/api-docs/(?<segment>.*)",
        // "/v3/api-docs/${segment}"))
        // .uri("lb://LEGALCONNECT-USUARIO-SERVICE"))
        // .build();
        // }

        @Bean
        public RouteLocator customRouteLocator(RouteLocatorBuilder builder) {
                return builder.routes()
                                // Rota principal para o serviço de usuário
                                .route("usuario-service", r -> r.path("/api/usuarios/**")
                                                .filters(f -> f.rewritePath("/api/usuarios/(?<segment>.*)",
                                                                "/${segment}"))
                                                .uri("lb://legalconnect-usuario-service"))

                                // Rota para a documentação OpenAPI
                                .route("usuario-service-api-docs", r -> r.path("/api/usuarios/v3/api-docs/**")
                                                .filters(f -> f.rewritePath("/api/usuarios/v3/api-docs/(?<segment>.*)",
                                                                "/v3/api-docs/${segment}"))
                                                .uri("lb://legalconnect-usuario-service"))

                                // Rota para o Swagger UI
                                .route("usuario-service-swagger-ui", r -> r.path("/api/usuarios/swagger-ui/**")
                                                .filters(f -> f.rewritePath("/api/usuarios/swagger-ui/(?<segment>.*)",
                                                                "/swagger-ui/${segment}"))
                                                .uri("lb://legalconnect-usuario-service"))

                                .build();
        }

}

```
```java
package br.com.legalconnect.gateway.config;

import java.util.List;
import java.util.Map;

import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.GatewayFilterChain;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.server.reactive.ServerHttpRequest;
import org.springframework.http.server.reactive.ServerHttpResponse;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;

import br.com.legalconnect.gateway.util.JwtUtil;
import reactor.core.publisher.Mono;

@Component // Nome do bean para uso no application.yml
public class JwtTokenFilter implements GatewayFilter {

    private final JwtUtil jwtUtil;

    public JwtTokenFilter(JwtUtil jwtUtil) {
        this.jwtUtil = jwtUtil;
    }

    @Override
    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
        ServerHttpRequest request = exchange.getRequest();
        ServerHttpResponse response = exchange.getResponse();

        // Verifica se a rota é pública (ex: /auth/** ou Swagger)
        // Isso é mais robusto fazer com Spring Security WebFilterChain
        // Mas para este exemplo, podemos verificar o path
        if (isPublicPath(request.getPath().value())) {
            return chain.filter(exchange);
        }

        List<String> authHeaders = request.getHeaders().get(HttpHeaders.AUTHORIZATION);

        if (authHeaders == null || authHeaders.isEmpty() || !authHeaders.get(0).startsWith("Bearer ")) {
            response.setStatusCode(HttpStatus.UNAUTHORIZED);
            return response.setComplete();
        }

        String token = authHeaders.get(0).substring(7); // Remove "Bearer "

        if (!jwtUtil.validateToken(token)) {
            response.setStatusCode(HttpStatus.UNAUTHORIZED);
            return response.setComplete();
        }

        // Extrai e remove claims específicos
        Map<String, Object> claims = jwtUtil.getAllClaimsFromToken(token);
        String userId = (String) claims.get("X-Correlaton-ID");
        String tenantId = (String) claims.get("X-Tenant-ID");

        // Remove os claims do token original (se necessário para nova validação
        // downstream)
        // Isso é mais complexo pois você precisaria gerar um novo token sem esses
        // claims.
        // Uma abordagem mais comum é manter o token original e propagar os claims
        // em headers separados para os microserviços.
        // Para este projeto, vamos propagar os claims como headers.

        ServerHttpRequest.Builder builder = request.mutate();
        if (userId != null) {
            builder.header("X-User-Id", userId);
        }
        if (tenantId != null) {
            builder.header("X-Tenant-Id", tenantId);
        }

        // Para evitar que o token completo seja enviado para os serviços downstream
        // Se você precisar do token completo downstream, considere remover essa linha
        // ou validar a necessidade.
        builder.header(HttpHeaders.AUTHORIZATION, "Bearer " + token); // Mantém o token original

        return chain.filter(exchange.mutate().request(builder.build()).build());
    }

    // Helper para verificar se o path é público
    private boolean isPublicPath(String path) {
        // Rotas que devem ser liberadas sem autenticação
        return path.startsWith("/auth/") ||
                path.startsWith("/swagger-ui/") ||
                path.startsWith("/v3/api-docs/");
    }
}

```
```java
// com.example.gateway.config/SecurityConfig.java
package br.com.legalconnect.gateway.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.reactive.CorsWebFilter;
import org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;

@Configuration
public class SecurityConfig {
    @Bean
    public CorsWebFilter corsWebFilter() {
        CorsConfiguration config = new CorsConfiguration();
        config.setAllowCredentials(true);
        config.addAllowedOrigin("*");
        config.addAllowedHeader("*");
        config.addAllowedMethod("*");

        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**", config);

        return new CorsWebFilter(source);
    }
}
```
```java
package br.com.legalconnect.gateway.util;

import java.util.Date;
import java.util.Map;
import java.util.function.Function;

import javax.crypto.SecretKey;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.MalformedJwtException;
import io.jsonwebtoken.SignatureException;
import io.jsonwebtoken.UnsupportedJwtException;
import io.jsonwebtoken.security.Keys;

@Component
public class JwtUtil {

    @Value("${application.security.jwt.secret-key}")
    private String secret;

    private SecretKey getSigningKey() {
        byte[] keyBytes = secret.getBytes();
        return Keys.hmacShaKeyFor(keyBytes);
    }

    public Map<String, Object> getAllClaimsFromToken(String token) {
        return Jwts.parserBuilder().setSigningKey(getSigningKey()).build().parseClaimsJws(token).getBody();
    }

    public <T> T getClaimFromToken(String token, Function<Claims, T> claimsResolver) {
        final Claims claims = (Claims) getAllClaimsFromToken(token);
        return claimsResolver.apply(claims);
    }

    public Date getExpirationDateFromToken(String token) {
        return getClaimFromToken(token, Claims::getExpiration);
    }

    private Boolean isTokenExpired(String token) {
        final Date expiration = getExpirationDateFromToken(token);
        return expiration.before(new Date());
    }

    public Boolean validateToken(String token) {
        try {
            Jwts.parserBuilder().setSigningKey(getSigningKey()).build().parseClaimsJws(token);
            return true;
        } catch (SignatureException e) {
            // Logger.error("Assinatura JWT inválida: {}", e.getMessage());
        } catch (MalformedJwtException e) {
            // Logger.error("Token JWT malformado: {}", e.getMessage());
        } catch (ExpiredJwtException e) {
            // Logger.error("Token JWT expirado: {}", e.getMessage());
        } catch (UnsupportedJwtException e) {
            // Logger.error("Token JWT não suportado: {}", e.getMessage());
        } catch (IllegalArgumentException e) {
            // Logger.error("String JWT compacta vazia: {}", e.getMessage());
        }
        return false;
    }
}
```
```java
# Server Configuration
server.port=8080

# Application Configuration
spring.application.name=legalconnect-gateway

# Gateway Discovery Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Eureka Discovery Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true

# Swagger Configuration
 

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
```
```java
package br.com.legalconnect.common.common_lib;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class CommonLibApplicationTests {

	@Test
	void contextLoads() {
	}

}

```
```
```java

```
```java
package br.com.legalconnect.gateway;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;

@SpringBootApplication
@EnableDiscoveryClient
public class LegalconnectGatewayApplication {

	public static void main(String[] args) {
		SpringApplication.run(LegalconnectGatewayApplication.class, args);
	}

}

```
```java
package br.com.legalconnect.gateway.config.enums;

public enum StatusResponse {
    SUCESSO,
    ERRO,
    AVISO;
}

```
```java
package br.com.legalconnect.gateway.config.exception;

import java.time.LocalDateTime;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonInclude;

import br.com.legalconnect.gateway.config.enums.StatusResponse;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * @class BaseResponse
 * @brief DTO base para padronizar as respostas da API.
 *
 *        Inclui campos comuns para todas as respostas, como status, mensagem,
 *        timestamp e, opcionalmente, uma lista de erros.
 *        Utiliza Lombok para reduzir boilerplate (getters, setters,
 *        construtores, builder).
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL) // Inclui apenas campos não nulos na serialização JSON
public class BaseResponse<T> {

    private StatusResponse status; // Status da resposta (ex: StatusResponse.SUCESSO, StatusResponse.ERRO,
                                   // "WARNING")
    private String message; // Mensagem descritiva da resposta
    private LocalDateTime timestamp; // Data e hora da resposta
    private T data; // Payload da resposta (dados de sucesso)
    private List<String> errors; // Lista de mensagens de erro, se houver
}
```
```java
package br.com.legalconnect.gateway.config.exception;

import org.springframework.http.HttpStatus;

import lombok.Getter;

/**
 * @class BusinessException
 * @brief Exceção personalizada para representar erros de negócio na aplicação.
 *
 *        Esta exceção é lançada quando uma regra de negócio não é satisfeita.
 *        Ela encapsula um {@link ErrorCode} e, opcionalmente, argumentos para
 *        formatar
 *        a mensagem de erro, além de um status HTTP para a resposta da API.
 */
@Getter
public class BusinessException extends RuntimeException {

    private final ErrorCode errorCode; // O código de erro padronizado
    private final String[] args; // Argumentos para formatar a mensagem do erro
    private final HttpStatus httpStatus; // Status HTTP associado a esta exceção

    public BusinessException(ErrorCode errorCode, HttpStatus httpStatus, String args) {
        super(args);
        this.errorCode = errorCode;
        this.args = new String[] { args, errorCode.getMessage() };
        this.httpStatus = httpStatus;
    }

    /**
     * Construtor para BusinessException com um ErrorCode e status HTTP padrão
     * (BAD_REQUEST).
     *
     * @param errorCode O código de erro que define o tipo de exceção de negócio.
     * @param args      Argumentos opcionais para formatar a mensagem do erro.
     */
    public BusinessException(ErrorCode errorCode, String... args) {
        this(errorCode, HttpStatus.BAD_REQUEST, args); // Por padrão, erros de negócio são BAD_REQUEST
    }

    /**
     * Construtor para BusinessException com um ErrorCode e um status HTTP
     * específico.
     *
     * @param errorCode  O código de erro que define o tipo de exceção de negócio.
     * @param httpStatus O status HTTP a ser retornado na resposta da API.
     * @param args       Argumentos opcionais para formatar a mensagem do erro.
     */
    public BusinessException(ErrorCode errorCode, HttpStatus httpStatus, String... args) {
        super(errorCode.getFormattedMessage(args)); // Define a mensagem da exceção usando a mensagem formatada do
                                                    // ErrorCode
        this.errorCode = errorCode;
        this.args = args;
        this.httpStatus = httpStatus;

    }

    /**
     * @brief Retorna a mensagem de erro formatada.
     * @return A mensagem de erro formatada.
     */
    @Override
    public String getMessage() {
        return errorCode.getFormattedMessage(args);
    }

    /**
     * @brief Retorna o código de erro.
     * @return O código de erro.
     */
    public String getCode() {
        return errorCode.getCode();
    }
}
```
```java
package br.com.legalconnect.gateway.config.exception;

import lombok.Getter;

/**
 * @enum ErrorCode
 * @brief Enumeração que define códigos de erro padronizados para a aplicação.
 *
 *        Cada código de erro possui uma mensagem associada, facilitando a
 *        padronização
 *        de respostas de erro na API e a internacionalização ou localização
 *        futura.
 */
@Getter
public enum ErrorCode {
    // Erros gerais de validação
    DADOS_INVALIDOS("001", "Dados fornecidos são inválidos."),
    REQUISICAO_MAL_FORMADA("002", "A requisição está mal formada."),
    PARAMETRO_AUSENTE("003", "Parâmetro obrigatório ausente."),

    // Erros de entidade / negócio
    ENTIDADE_NAO_ENCONTRADA("100", "Entidade não encontrada."),
    EMPRESA_NAO_ENCONTRADA("101", "Empresa não encontrada."),
    PROFISSIONAL_NAO_ENCONTRADO("102", "Profissional não encontrado."),
    CLIENTE_NAO_ENCONTRADO("103", "Cliente não encontrado."),
    ADMINISTRADOR_NAO_ENCONTRADO("104", "Administrador não encontrado."),
    PLANO_NAO_ENCONTRADO("105", "Plano não encontrado."),
    USER_NAO_ENCONTRADO("106", "Usuário associado não encontrado."),

    // Erros de duplicidade
    CNPJ_DUPLICADO("200", "CNPJ já cadastrado."),
    CPF_DUPLICADO("201", "CPF já cadastrado."),
    OAB_DUPLICADA("202", "Número da OAB já cadastrado."),
    EMAIL_DUPLICADO("203", "Email já cadastrado."),
    NOME_PLANO_DUPLICADO("204", "Nome do plano já cadastrado."),

    // Erros de integridade
    INTEGRIDADE_VIOLADA("300", "Violação de integridade de dados."),
    RECURSO_EM_USO("301", "Recurso não pode ser excluído pois está em uso."),

    // Erros de sistema / internos
    ERRO_INTERNO_SERVIDOR("500", "Ocorreu um erro interno no servidor."),
    SERVICO_INDISPONIVEL("503", "Serviço temporariamente indisponível."),

    // Erros Gerais/Comuns (1000-1999)
    GENERIC_ERROR("1000", "Ocorreu um erro inesperado. Por favor, tente novamente mais tarde."),
    INVALID_INPUT("1001", "Dados de entrada inválidos."),
    RESOURCE_NOT_FOUND("1002", "Recurso não encontrado."),
    UNAUTHORIZED_ACCESS("1003", "Acesso não autorizado. Credenciais inválidas ou ausentes."),
    FORBIDDEN_ACCESS("1004", "Acesso negado. Você não tem permissão para realizar esta ação."),
    SERVICE_UNAVAILABLE("1005", "O serviço está temporariamente indisponível. Tente novamente mais tarde."),
    TOO_MANY_REQUESTS("1006", "Muitas requisições. Por favor, aguarde e tente novamente."),
    VALIDATION_ERROR("1007", "Erro de validação nos dados fornecidos."),
    DATABASE_ERROR("1008", "Erro ao acessar o banco de dados."),
    INTEGRATION_ERROR("1009", "Erro de integração com serviço externo."),

    // Erros de Autenticação e Autorização (2000-2999)
    INVALID_CREDENTIALS("2000", "Credenciais de autenticação inválidas."),
    ACCOUNT_LOCKED("2001", "Sua conta está bloqueada."),
    ACCOUNT_DISABLED("2002", "Sua conta está desativada."),
    TOKEN_EXPIRED("2003", "O token de acesso expirou."),
    INVALID_TOKEN("2004", "O token de acesso é inválido."),
    REFRESH_TOKEN_EXPIRED("2005", "O refresh token expirou. Faça login novamente."),
    INVALID_REFRESH_TOKEN("2006", "O refresh token é inválido."),
    USER_NOT_FOUND("2007", "Usuário não encontrado."),
    EMAIL_ALREADY_REGISTERED("2008", "Este e-mail já está cadastrado."),
    PASSWORD_RESET_FAILED("2009", "Falha ao redefinir a senha."),
    INVALID_CURRENT_PASSWORD("2010", "A senha atual fornecida está incorreta."), // Novo erro
    PASSWORD_RESET_TOKEN_INVALID("2011", "Token de redefinição de senha inválido."), // Novo erro
    PASSWORD_RESET_TOKEN_EXPIRED("2012", "Token de redefinição de senha expirado."), // Novo erro
    PASSWORD_RESET_TOKEN_USED("2013", "Token de redefinição de senha já utilizado."), // Novo erro
    PASSWORD_RESET_TOKEN_EXCEEDED("2014", "Limite de redefinições de senha excedido."), // Novo erro

    // Erros de Negócio Específicos (3000-3999) - Exemplo
    TENANT_NOT_FOUND("3000", "Tenant não encontrado."),
    TENANT_DISABLED("3001", "O tenant está desativado."),
    SUBSCRIPTION_EXPIRED("3002", "Sua assinatura expirou."),
    PLAN_NOT_ACTIVE("3003", "O plano selecionado não está ativo."),
    SERVICE_LIMIT_EXCEEDED("3004", "Limite de serviços agendáveis excedido para o seu plano."),
    ADVOCATE_NOT_AVAILABLE("3005", "Advogado não disponível no horário selecionado."),
    APPOINTMENT_CONFLICT("3006", "Conflito de agendamento. O horário já está ocupado."),
    PAYMENT_FAILED("3007", "Falha no processamento do pagamento."),
    INVALID_PROMO_CODE("3008", "Código promocional inválido ou expirado."),
    DOCUMENT_UPLOAD_FAILED("3009", "Falha ao fazer upload do documento."),
    INVALID_DOCUMENT_FORMAT("3010", "Formato de documento inválido."),

    // Erros de Validação de Campo (4000-4999) - Mais específicos, geralmente
    // tratados por @Valid
    FIELD_REQUIRED("4000", "O campo '%s' é obrigatório."),
    INVALID_FORMAT("4001", "O campo '%s' possui formato inválido."),
    MIN_LENGTH("4002", "O campo '%s' deve ter no mínimo %d caracteres."),
    MAX_LENGTH("4003", "O campo '%s' deve ter no máximo %d caracteres."),
    INVALID_EMAIL("4004", "O e-mail fornecido é inválido."),
    INVALID_CPF("4005", "O CPF fornecido é inválido."),
    INVALID_CNPJ("4006", "O CNPJ fornecido é inválido."),
    PASSWORD_TOO_WEAK("4007", "A senha é muito fraca."),
    DATE_IN_PAST("4008", "A data não pode ser no passado."),
    INVALID_ENUM_VALUE("4009", "Valor inválido para o campo '%s'.");

    private final String code;
    private final String message;

    /**
     * Construtor para ErrorCode.
     *
     * @param code    O código único do erro.
     * @param message A mensagem descritiva do erro.
     */
    ErrorCode(String code, String message) {
        this.code = code;
        this.message = message;
    }

    /**
     * @brief Retorna a mensagem de erro formatada com argumentos.
     * @param args Argumentos para formatar a mensagem.
     * @return A mensagem de erro formatada.
     */
    public String getFormattedMessage(Object... args) {
        return String.format(this.message, args);
    }
}

```
```java
package br.com.legalconnect.gateway.config.exception;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.server.ServerWebExchange;

import br.com.legalconnect.gateway.config.enums.StatusResponse;
import reactor.core.publisher.Mono;

@RestControllerAdvice
public class GlobalExceptionHandler {

        @ExceptionHandler(BusinessException.class)
        public Mono<ResponseEntity<BaseResponse>> handleBusinessException(
                        BusinessException ex,
                        ServerWebExchange exchange) {

                BaseResponse response = BaseResponse.builder()
                                .status(StatusResponse.ERRO)
                                .message(ex.getMessage())
                                .build();

                return Mono.just(ResponseEntity
                                .status(ex.getHttpStatus())
                                .body(response));
        }
}
```
```java
package br.com.legalconnect.gateway.util;

import java.nio.charset.StandardCharsets;
import java.util.Date;
import java.util.function.Function;

import javax.crypto.SecretKey;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;

import br.com.legalconnect.gateway.config.exception.BusinessException;
import br.com.legalconnect.gateway.config.exception.ErrorCode;
import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.security.Keys;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component

public class AuthFilter extends AbstractGatewayFilterFactory<AuthFilter.Config> {

    @Value("${application.security.jwt.secret-key}")
    private String secretKey;

    public AuthFilter(

    ) {
        super(Config.class);

    }

    @Override
    public GatewayFilter apply(Config config) {
        return (exchange, chain) -> {
            try {
                String authHeader = exchange.getRequest().getHeaders().getFirst(HttpHeaders.AUTHORIZATION);

                if (authHeader == null || !authHeader.startsWith("Bearer ")) {
                    throw new BusinessException(ErrorCode.USER_NOT_FOUND, "Token não encontrado");
                }

                String token = authHeader.substring(7);

                if (token == null || token.isBlank()) {
                    throw new BusinessException(ErrorCode.USER_NOT_FOUND, "Token não encontrado");
                }

                Claims claims = extractAllClaims(token);
                if (isTokenExpired(token)) {
                    throw new BusinessException(ErrorCode.TOKEN_EXPIRED, "Token expirado");
                }
                String correlationId = claims.get("X-Correlation-ID", String.class);
                String tenantId = claims.get("X-Tenant-ID", String.class);

                if (correlationId == null || correlationId.isBlank()) {
                    throw new BusinessException(ErrorCode.USER_NOT_FOUND, "X-Correlation-ID não encontrado no token");
                }

                if (tenantId == null || tenantId.isBlank()) {
                    throw new BusinessException(ErrorCode.TENANT_NOT_FOUND, "tenantId não encontrado no token");
                }

                ServerWebExchange mutated = exchange.mutate()
                        .request(builder -> {
                            builder.header("X-Correlation-ID", correlationId);
                            builder.header("X-Tenant-ID", tenantId);

                        })
                        .build();

                return chain.filter(mutated);

            } catch (Exception e) {
                log.error("Erro ao processar token JWT: {}", e.getMessage());
                // if (e instanceof BusinessException) {
                // throw (BusinessException) e;
                // }
                throw new BusinessException(ErrorCode.INVALID_TOKEN, "Token inválido ou malformado");
            }
        };
    }

    public static class Config {
    }

    private Claims extractAllClaims(String token) {
        SecretKey key = Keys.hmacShaKeyFor(secretKey.getBytes(StandardCharsets.UTF_8));
        return Jwts.parser()
                .verifyWith(key)
                .build()
                .parseSignedClaims(token)
                .getPayload();
    }

    /**
     * Verifica se o token JWT expirou.
     * 
     * @param token O token JWT.
     * @return True se o token expirou, false caso contrário.
     */
    private boolean isTokenExpired(String token) {
        Date expiration = extractExpiration(token);
        boolean expired = expiration.before(new Date());
        if (expired) {
            log.debug("Token expirado em: {}", expiration);
        }
        return expired;
    }

    /**
     * Extrai a data de expiração do token JWT.
     * 
     * @param token O token JWT.
     * @return A data de expiração.
     */
    Date extractExpiration(String token) {
        return extractClaim(token, Claims::getExpiration);
    }

    public String extractUsername(String token) {
        try {
            return extractClaim(token, Claims::getSubject);
        } catch (Exception e) {
            log.warn("Erro ao extrair username do token: {}", e.getMessage());
            return null;
        }
    }

    /**
     * Extrai uma claim específica do token JWT.
     * 
     * @param token          O token JWT.
     * @param claimsResolver Função para resolver a claim.
     * @param <T>            Tipo da claim.
     * @return O valor da claim.
     */
    public <T> T extractClaim(String token, Function<Claims, T> claimsResolver) {
        final Claims claims = extractAllClaims(token);
        return claimsResolver.apply(claims);
    }

}
```
```java

# src/main/resources/application.properties
# Configuração do Servidor
server.port=8080

# Configuração da Aplicação
spring.application.name=legalconnect-gateway

 
# Configuração de Descoberta do Eureka
# URL do servidor Eureka.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Habilita a busca do registro de serviços do Eureka.
eureka.client.fetch-registry=true
# Habilita o registro deste serviço no Eureka.
eureka.client.register-with-eureka=true
# Prefere o endereço IP ao invés do hostname para registro no Eureka.
eureka.instance.prefer-ip-address=true
# Additional Swagger configuration
 

# Swagger configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=br.com.legalconnect
spring.mvc.favicon.enabled=false

# Configuração do Swagger (Espaço reservado, pode ser configurado dinamicamente via GatewayConfig)

# Configuração do Actuator
# Inclui endpoints do Actuator para monitoramento de saúde e informações.
management.endpoints.web.exposure.include=health,info
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
 
# application.properties

# Nome da sua aplicação Gateway 

# Configuração das rotas do Gateway
# spring.cloud.gateway.routes[0].id=clientes-route
# spring.cloud.gateway.routes[0].uri=lb://legalconnect-usuario-service
# spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/clientes/**


# # Filtros específicos para a rota 'clientes-route'
# # Exemplo de filtro: remove os 2 primeiros segmentos do path
# spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2
# # Exemplo de filtro personalizado (se você tiver um filtro Java chamado MyCustomFilterGatewayFilterFactory)
# spring.cloud.gateway.routes[0].filters[1]=MyCustomFilter
# # Exemplo de filtro que adiciona um cabeçalho à requisição 

# Filtros padrão que se aplicam a todas as rotas

spring.cloud.gateway.routes[1].id=auth-service-route
spring.cloud.gateway.routes[1].uri=lb://auth-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/auth/**
# spring.cloud.gateway.routes[1].filters[0]=AuthFilter

spring.cloud.gateway.routes[0].id=clientes-route
spring.cloud.gateway.routes[0].uri=lb://legalconnect-usuario-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/usuarios/**
spring.cloud.gateway.routes[0].filters[0]=AuthFilter
spring.cloud.gateway.global-filters[0].DedupeResponseHeader.strategy=RETAIN_LAST

spring.cloud.gateway.routes[2].id=advogados-route
spring.cloud.gateway.routes[2].uri=lb://legalconnect-advogados
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/advogados/**
spring.cloud.gateway.routes[2].filters[0]=AuthFilter
spring.cloud.gateway.global-filters[2].DedupeResponseHeader.strategy=RETAIN_LAST
# Chave secreta JWT
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

# Rotas públicas
application.security.public-paths=/auth/**,/swagger-ui/**,/v3/api-docs/**,/api/usuarios/swagger-ui.html,/api/usuarios/webjars/**,/api/usuarios/v3/api-docs/**

# Configurações específicas para a rota de clientes
application.security.routes.clientes.required-role=CLIENT
application.security.routes.clientes.required-scopes=client.read,client.write
# Desabilite o tratamento de erro padrão do Spring
# Desabilite o tratamento de erro padrão do Spring
spring.webflux.auto-configure-error=false
```
```java
package br.com.legalconnect.common.common_lib;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class CommonLibApplicationTests {

	@Test
	void contextLoads() {
	}

}

```
```java

# src/main/resources/application.properties
# Configuração do Servidor
server.port=8080

# Configuração da Aplicação
spring.application.name=legalconnect-gateway

 
# Configuração de Descoberta do Eureka
# URL do servidor Eureka.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Habilita a busca do registro de serviços do Eureka.
eureka.client.fetch-registry=true
# Habilita o registro deste serviço no Eureka.
eureka.client.register-with-eureka=true
# Prefere o endereço IP ao invés do hostname para registro no Eureka.
eureka.instance.prefer-ip-address=true
# Additional Swagger configuration
 

# Swagger configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=br.com.legalconnect
spring.mvc.favicon.enabled=false

# Configuração do Swagger (Espaço reservado, pode ser configurado dinamicamente via GatewayConfig)

# Configuração do Actuator
# Inclui endpoints do Actuator para monitoramento de saúde e informações.
management.endpoints.web.exposure.include=health,info
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
 
# application.properties

# Nome da sua aplicação Gateway 

# Configuração das rotas do Gateway
# spring.cloud.gateway.routes[0].id=clientes-route
# spring.cloud.gateway.routes[0].uri=lb://legalconnect-usuario-service
# spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/clientes/**


# # Filtros específicos para a rota 'clientes-route'
# # Exemplo de filtro: remove os 2 primeiros segmentos do path
# spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2
# # Exemplo de filtro personalizado (se você tiver um filtro Java chamado MyCustomFilterGatewayFilterFactory)
# spring.cloud.gateway.routes[0].filters[1]=MyCustomFilter
# # Exemplo de filtro que adiciona um cabeçalho à requisição 

# Filtros padrão que se aplicam a todas as rotas

spring.cloud.gateway.routes[1].id=auth-service-route
spring.cloud.gateway.routes[1].uri=lb://auth-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/auth/**
# spring.cloud.gateway.routes[1].filters[0]=AuthFilter

spring.cloud.gateway.routes[0].id=clientes-route
spring.cloud.gateway.routes[0].uri=lb://legalconnect-usuario-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/usuarios/**
spring.cloud.gateway.routes[0].filters[0]=AuthFilter
spring.cloud.gateway.global-filters[0].DedupeResponseHeader.strategy=RETAIN_LAST

spring.cloud.gateway.routes[2].id=advogados-route
spring.cloud.gateway.routes[2].uri=lb://legalconnect-advogados
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/advogados/**
spring.cloud.gateway.routes[2].filters[0]=AuthFilter
spring.cloud.gateway.global-filters[2].DedupeResponseHeader.strategy=RETAIN_LAST
# Chave secreta JWT
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

# Rotas públicas
application.security.public-paths=/auth/**,/swagger-ui/**,/v3/api-docs/**,/api/usuarios/swagger-ui.html,/api/usuarios/webjars/**,/api/usuarios/v3/api-docs/**

# Configurações específicas para a rota de clientes
application.security.routes.clientes.required-role=CLIENT
application.security.routes.clientes.required-scopes=client.read,client.write
# Desabilite o tratamento de erro padrão do Spring
# Desabilite o tratamento de erro padrão do Spring
spring.webflux.auto-configure-error=false
```
```java
Êþº¾   =   :br/com/legalconnect/gateway/LegalconnectGatewayApplication  java/lang/Object <init> ()V Code
  	   LineNumberTable LocalVariableTable this <Lbr/com/legalconnect/gateway/LegalconnectGatewayApplication; main ([Ljava/lang/String;)V
    *org/springframework/boot/SpringApplication   run b(Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext; args [Ljava/lang/String; MethodParameters 
SourceFile #LegalconnectGatewayApplication.java RuntimeVisibleAnnotations >Lorg/springframework/boot/autoconfigure/SpringBootApplication; BLorg/springframework/cloud/client/discovery/EnableDiscoveryClient; !               /     *· ±    
       	          
   	       6     *¸ W±    
   
      
                             
       
```
```java
Êþº¾   = 6  7br/com/legalconnect/gateway/config/enums/StatusResponse  java/lang/Enum SUCESSO 9Lbr/com/legalconnect/gateway/config/enums/StatusResponse; ERRO AVISO ENUM$VALUES :[Lbr/com/legalconnect/gateway/config/enums/StatusResponse; <clinit> ()V Code 
     <init> (Ljava/lang/String;I)V	     	     	    	   	 
 LineNumberTable LocalVariableTable
   this 
$enum$name 
$enum$ordinal MethodParameters values <()[Lbr/com/legalconnect/gateway/config/enums/StatusResponse;
 ' ) ( java/lang/System * + 	arraycopy *(Ljava/lang/Object;ILjava/lang/Object;II)V valueOf M(Ljava/lang/String;)Lbr/com/legalconnect/gateway/config/enums/StatusResponse;
  / , 0 5(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; name 
SourceFile StatusResponse.java 	Signature KLjava/lang/Enum<Lbr/com/legalconnect/gateway/config/enums/StatusResponse;>;@1     @    @    @     	 
        
   m      A» Y· ³ » Y· ³ » Y· ³ ½ Y² SY² SY² S³ ±            
    '            
   1     *+· ±                         #   	 !  "  	 $ %  
   6     ² YK*¾Y<½ YM¸ &,°                  	 , -  
   *     
*¸ .À °                  #    1   2    3 4    5
```
```java
Êþº¾   = \  Mbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder  java/lang/Object status 9Lbr/com/legalconnect/gateway/config/enums/StatusResponse; RuntimeInvisibleAnnotations Llombok/Generated; message Ljava/lang/String; 	timestamp Ljava/time/LocalDateTime; data Ljava/lang/Object; 	Signature TT; errors Ljava/util/List; $Ljava/util/List<Ljava/lang/String;>; <init> ()V Code
     LineNumberTable LocalVariableTable this OLbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; LocalVariableTypeTable TLbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>; (Lbr/com/legalconnect/gateway/config/enums/StatusResponse;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; (Lbr/com/legalconnect/gateway/config/enums/StatusResponse;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>;	  "   MethodParameters c(Ljava/lang/String;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; h(Ljava/lang/String;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>;	  ' 	 
 j(Ljava/time/LocalDateTime;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; o(Ljava/time/LocalDateTime;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>;	  +   c(Ljava/lang/Object;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; Y(TT;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>;	  / 
  a(Ljava/util/List;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; z(Ljava/util/List<Ljava/lang/String;>;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>;	  3   build =()Lbr/com/legalconnect/gateway/config/exception/BaseResponse; B()Lbr/com/legalconnect/gateway/config/exception/BaseResponse<TT;>; 8 9br/com/legalconnect/gateway/config/exception/BaseResponse
 7 :  ; (Lbr/com/legalconnect/gateway/config/enums/StatusResponse;Ljava/lang/String;Ljava/time/LocalDateTime;Ljava/lang/Object;Ljava/util/List;)V toString ()Ljava/lang/String;
 ? A @ java/lang/String B C valueOf &(Ljava/lang/Object;)Ljava/lang/String;   E F G makeConcatWithConstants n(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; 
SourceFile BaseResponse.java (<T:Ljava/lang/Object;>Ljava/lang/Object; BootstrapMethods
 M O N $java/lang/invoke/StringConcatFactory F P (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite; L S TBaseResponse.BaseResponseBuilder(status=, message=, timestamp=, data=, errors=) InnerClasses BaseResponseBuilder W %java/lang/invoke/MethodHandles$Lookup Y java/lang/invoke/MethodHandles Lookup NestHost !                   	 
                       
                                                  A     *· ±                                                         M     *+µ !*°                                          #       	 $      %            M     *+µ &*°                           	 
              #    	    (      )            M     *+µ **°                                          #       
 ,      -            W     *+µ .*°                           
                  
   #    
    0      1            W     *+µ 2*°                                                #       4 5      6            X     » 7Y*´ !*´ &*´ **´ .*´ 2· 9°                                     < =             b     &*´ !¸ >*´ &*´ *¸ >*´ .¸ >*´ 2¸ >º D  °                   &            &      H    I     J         K     Q  R T      7 U 	 V X Z  [    7
```
```java
Êþº¾   =   9br/com/legalconnect/gateway/config/exception/BaseResponse  java/lang/Object status 9Lbr/com/legalconnect/gateway/config/enums/StatusResponse; message Ljava/lang/String; 	timestamp Ljava/time/LocalDateTime; data Ljava/lang/Object; 	Signature TT; errors Ljava/util/List; $Ljava/util/List<Ljava/lang/String;>; builder Q()Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder; l<T:Ljava/lang/Object;>()Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder<TT;>; RuntimeInvisibleAnnotations Llombok/Generated; Code  Mbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder
     <init> ()V LineNumberTable LocalVariableTable 	getStatus ;()Lbr/com/legalconnect/gateway/config/enums/StatusResponse;	  #   this ;Lbr/com/legalconnect/gateway/config/exception/BaseResponse; LocalVariableTypeTable @Lbr/com/legalconnect/gateway/config/exception/BaseResponse<TT;>; 
getMessage ()Ljava/lang/String;	  +   getTimestamp ()Ljava/time/LocalDateTime;	  / 	 
 getData ()Ljava/lang/Object; ()TT;	  4   	getErrors ()Ljava/util/List; &()Ljava/util/List<Ljava/lang/String;>;	  9   	setStatus <(Lbr/com/legalconnect/gateway/config/enums/StatusResponse;)V MethodParameters 
setMessage (Ljava/lang/String;)V setTimestamp (Ljava/time/LocalDateTime;)V setData (Ljava/lang/Object;)V (TT;)V 	setErrors (Ljava/util/List;)V '(Ljava/util/List<Ljava/lang/String;>;)V equals (Ljava/lang/Object;)Z
  J K H canEqual
  M   !
  O G H
  Q ( )
  S , -
  U 0 1
  W 5 6 o other this$status other$status this$message 
other$message this$timestamp other$timestamp 	this$data 
other$data this$errors other$errors >Lbr/com/legalconnect/gateway/config/exception/BaseResponse<*>; 
StackMapTable hashCode ()I
  i f g PRIME I result $status $message 
$timestamp $data $errors toString
 t v u java/lang/String w x valueOf &(Ljava/lang/Object;)Ljava/lang/String;   z { | makeConcatWithConstants n(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   (Lbr/com/legalconnect/gateway/config/enums/StatusResponse;Ljava/lang/String;Ljava/time/LocalDateTime;Ljava/lang/Object;Ljava/util/List;)V (Lbr/com/legalconnect/gateway/config/enums/StatusResponse;Ljava/lang/String;Ljava/time/LocalDateTime;TT;Ljava/util/List<Ljava/lang/String;>;)V 
SourceFile BaseResponse.java (<T:Ljava/lang/Object;>Ljava/lang/Object; RuntimeVisibleAnnotations .Lcom/fasterxml/jackson/annotation/JsonInclude; value 6Lcom/fasterxml/jackson/annotation/JsonInclude$Include; NON_NULL BootstrapMethods
    $java/lang/invoke/StringConcatFactory {  (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;   @BaseResponse(status=, message=, timestamp=, data=, errors=) InnerClasses BaseResponseBuilder  4com/fasterxml/jackson/annotation/JsonInclude$Include  ,com/fasterxml/jackson/annotation/JsonInclude Include  %java/lang/invoke/MethodHandles$Lookup  java/lang/invoke/MethodHandles Lookup NestMembers !                 	 
       
         
      	    
                (      » Y· °                     !             A     *´ "°                    $ %   &        $ '    ( )             A     *´ *°                    $ %   &        $ '    , -             A     *´ .°                    $ %   &        $ '    0 1  
    2            A     *´ 3°                    $ %   &        $ '    5 6  
    7            A     *´ 8°                    $ %   &        $ '    : ;             L     *+µ "±                    $ %         &        $ '   <       = >             L     *+µ *±                    $ %         &        $ '   <       ? @             L     *+µ .±                    $ %      	 
  &        $ '   <    	   A B  
    C            V     *+µ 3±                    $ %         &        $ '         <       D E  
    F            V     *+µ 8±                    $ %         &        $ '         <       G H            Ü  
   ×+*¦ ¬+Á  ¬+À M,*¶ I ¬*¶ LN,¶ L:-Ç Æ § -¶ N ¬*¶ P:,¶ P:Ç Æ § 
¶ N ¬*¶ R:,¶ R:Ç Æ § 
¶ N ¬*¶ T:	,¶ T:
	Ç 
Æ § 
	
¶ N ¬*¶ V:,¶ V:Ç Æ § 
¶ N ¬¬                
   × $ %     × X    Â Y %  $ ³ Z   * ­ [   G  \   M  ]   l k ^   r e _    F `  	  @ a  
 ¶ ! b   ¼  c   &       × $ '    Â Y d  e   A ü  ý   ý   	ý   	ý   	ý   	 <    X   K H             K     +Á ¬                    $ %      Y   &        $ '   <    Y   f g            ö     ;<=*¶ LN;h-Ç +§ -¶ h`=*¶ P:;hÇ +§ ¶ h`=*¶ R:;hÇ +§ ¶ h`=*¶ T:;hÇ +§ ¶ h`=*¶ V:;hÇ +§ ¶ h`=¬               R     $ %     j k    l k  
  m   # h n   > M o   Y 2 p   t  q   &        $ '   e   ã 
ÿ     ÿ     ÿ      ÿ      ÿ       ÿ       ÿ        ÿ        ÿ         ÿ           r )             b     &*¶ L¸ s*¶ P*¶ R¸ s*¶ T¸ s*¶ V¸ sº y  °                   & $ %   &       & $ '                  A     *· }±                    $ %   &        $ '     ~  
                ¢      *· }*+µ "*,µ **-µ .*µ 3*µ 8±               >      $ %                     	 
                &          $ '                 <        	            
        
    e                   	   @          
```
```java
Êþº¾   = ?  >br/com/legalconnect/gateway/config/exception/BusinessException  java/lang/RuntimeException 	errorCode 8Lbr/com/legalconnect/gateway/config/exception/ErrorCode; args [Ljava/lang/String; 
httpStatus %Lorg/springframework/http/HttpStatus; <init> r(Lbr/com/legalconnect/gateway/config/exception/ErrorCode;Lorg/springframework/http/HttpStatus;Ljava/lang/String;)V Code
     (Ljava/lang/String;)V	      java/lang/String
    6br/com/legalconnect/gateway/config/exception/ErrorCode   
getMessage ()Ljava/lang/String;	    	   	 
 LineNumberTable LocalVariableTable this @Lbr/com/legalconnect/gateway/config/exception/BusinessException; Ljava/lang/String; MethodParameters N(Lbr/com/legalconnect/gateway/config/exception/ErrorCode;[Ljava/lang/String;)V	 ' ) ( #org/springframework/http/HttpStatus * 
 BAD_REQUEST
  ,  - s(Lbr/com/legalconnect/gateway/config/exception/ErrorCode;Lorg/springframework/http/HttpStatus;[Ljava/lang/String;)V
  / 0 1 getFormattedMessage '([Ljava/lang/Object;)Ljava/lang/String; getCode
  4 2  getErrorCode :()Lbr/com/legalconnect/gateway/config/exception/ErrorCode; RuntimeInvisibleAnnotations Llombok/Generated; getArgs ()[Ljava/lang/String; 
getHttpStatus '()Lorg/springframework/http/HttpStatus; 
SourceFile BusinessException.java !                 	 
        
   {     #*-· *+µ *½ Y-SY+¶ Sµ *,µ ±              
    "      *    # ! "     #      # 	 
    #  #  $   
    	        %  
   L     
*+² &,· +±       
    & 	 '          
 ! "     
      
    $   	         -  
   q     *+-¶ .· *+µ *-µ *,µ ±           2 	 4  5  6  8     *     ! "            	 
        $   
    	          
   6     *´ *´ ¶ .°           @          ! "    2   
   2     *´ ¶ 3°           H          ! "    5 6  7     8   
   /     *´ °                     ! "    9 :  7     8   
   /     *´ °                     ! "    ; <  7     8   
   /     *´ °                     ! "    =    >
```
```java
Êþº¾   =J  6br/com/legalconnect/gateway/config/exception/ErrorCode  java/lang/Enum DADOS_INVALIDOS 8Lbr/com/legalconnect/gateway/config/exception/ErrorCode; REQUISICAO_MAL_FORMADA PARAMETRO_AUSENTE ENTIDADE_NAO_ENCONTRADA EMPRESA_NAO_ENCONTRADA PROFISSIONAL_NAO_ENCONTRADO CLIENTE_NAO_ENCONTRADO ADMINISTRADOR_NAO_ENCONTRADO PLANO_NAO_ENCONTRADO USER_NAO_ENCONTRADO CNPJ_DUPLICADO 
CPF_DUPLICADO 
OAB_DUPLICADA EMAIL_DUPLICADO NOME_PLANO_DUPLICADO INTEGRIDADE_VIOLADA RECURSO_EM_USO ERRO_INTERNO_SERVIDOR SERVICO_INDISPONIVEL 
GENERIC_ERROR 
INVALID_INPUT RESOURCE_NOT_FOUND UNAUTHORIZED_ACCESS FORBIDDEN_ACCESS SERVICE_UNAVAILABLE TOO_MANY_REQUESTS VALIDATION_ERROR DATABASE_ERROR INTEGRATION_ERROR INVALID_CREDENTIALS ACCOUNT_LOCKED ACCOUNT_DISABLED 
TOKEN_EXPIRED 
INVALID_TOKEN REFRESH_TOKEN_EXPIRED INVALID_REFRESH_TOKEN USER_NOT_FOUND EMAIL_ALREADY_REGISTERED PASSWORD_RESET_FAILED INVALID_CURRENT_PASSWORD PASSWORD_RESET_TOKEN_INVALID PASSWORD_RESET_TOKEN_EXPIRED PASSWORD_RESET_TOKEN_USED PASSWORD_RESET_TOKEN_EXCEEDED TENANT_NOT_FOUND TENANT_DISABLED SUBSCRIPTION_EXPIRED PLAN_NOT_ACTIVE SERVICE_LIMIT_EXCEEDED ADVOCATE_NOT_AVAILABLE APPOINTMENT_CONFLICT PAYMENT_FAILED INVALID_PROMO_CODE DOCUMENT_UPLOAD_FAILED INVALID_DOCUMENT_FORMAT FIELD_REQUIRED INVALID_FORMAT 
MIN_LENGTH 
MAX_LENGTH 
INVALID_EMAIL INVALID_CPF INVALID_CNPJ PASSWORD_TOO_WEAK DATE_IN_PAST INVALID_ENUM_VALUE code Ljava/lang/String; message ENUM$VALUES 9[Lbr/com/legalconnect/gateway/config/exception/ErrorCode; <clinit> ()V Code  Q 001 S !Dados fornecidos sÃ£o invÃ¡lidos.
  U V W <init> :(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	  Y    \ 002 ^ !A requisiÃ§Ã£o estÃ¡ mal formada.	  `    c 003 e  ParÃ¢metro obrigatÃ³rio ausente.	  g   	 j 100 l Entidade nÃ£o encontrada.	  n 	  
 q 101 s Empresa nÃ£o encontrada.	  u 
   x 102 z Profissional nÃ£o encontrado.	  |     103  Cliente nÃ£o encontrado.	     
  104  Administrador nÃ£o encontrado.	   
    105  Plano nÃ£o encontrado.	       106  #UsuÃ¡rio associado nÃ£o encontrado.	       200  CNPJ jÃ¡ cadastrado.	      ¢ 201 ¤ CPF jÃ¡ cadastrado.	  ¦    © 202 « NÃºmero da OAB jÃ¡ cadastrado.	  ­    ° 203 ² Email jÃ¡ cadastrado.	  ´    · 204 ¹ Nome do plano jÃ¡ cadastrado.	  »    ¾ 300 À #ViolaÃ§Ã£o de integridade de dados.	  Â    Å 301 Ç 2Recurso nÃ£o pode ser excluÃ­do pois estÃ¡ em uso.	  É    Ì 500 Î $Ocorreu um erro interno no servidor.	  Ð    Ó 503 Õ 'ServiÃ§o temporariamente indisponÃ­vel.	  ×    Ú 1000 Ü BOcorreu um erro inesperado. Por favor, tente novamente mais tarde.	  Þ    á 1001 ã Dados de entrada invÃ¡lidos.	  å    è 1002 ê Recurso nÃ£o encontrado.	  ì    ï 1003 ñ ;Acesso nÃ£o autorizado. Credenciais invÃ¡lidas ou ausentes.	  ó    ö 1004 ø CAcesso negado. VocÃª nÃ£o tem permissÃ£o para realizar esta aÃ§Ã£o.	  ú    ý 1005 ÿ KO serviÃ§o estÃ¡ temporariamente indisponÃ­vel. Tente novamente mais tarde.	     1006 ;Muitas requisiÃ§Ãµes. Por favor, aguarde e tente novamente.	      1007
 )Erro de validaÃ§Ã£o nos dados fornecidos.	     ! 1008 !Erro ao acessar o banco de dados.	  !  " 1009 *Erro de integraÃ§Ã£o com serviÃ§o externo.	  "  #  2000" )Credenciais de autenticaÃ§Ã£o invÃ¡lidas.	 $ #  $' 2001) Sua conta estÃ¡ bloqueada.	 + $  %. 20020 Sua conta estÃ¡ desativada.	 2 %  &5 20037 O token de acesso expirou.	 9 &  '< 2004> O token de acesso Ã© invÃ¡lido.	 @ '  (C 2005E /O refresh token expirou. FaÃ§a login novamente.	 G (  )J 2006L O refresh token Ã© invÃ¡lido.	 N )  *Q 2007S UsuÃ¡rio nÃ£o encontrado.	 U *  +X 2008Z !Este e-mail jÃ¡ estÃ¡ cadastrado.	 \ +  ,_ 2009a Falha ao redefinir a senha.	 c ,  -f 2010h (A senha atual fornecida estÃ¡ incorreta.	 j -  .m 2011o *Token de redefiniÃ§Ã£o de senha invÃ¡lido.	 q .  /t 2012v )Token de redefiniÃ§Ã£o de senha expirado.	 x /  0{ 2013} .Token de redefiniÃ§Ã£o de senha jÃ¡ utilizado.	  0  1 2014 +Limite de redefiniÃ§Ãµes de senha excedido.	  1  2 3000 Tenant nÃ£o encontrado.	  2  3 3001 O tenant estÃ¡ desativado.	  3  4 3002 Sua assinatura expirou.	  4  5 3003  %O plano selecionado nÃ£o estÃ¡ ativo.	 ¢ 5  6¥ 3004§ :Limite de serviÃ§os agendÃ¡veis excedido para o seu plano.	 © 6  7¬ 3005® 2Advogado nÃ£o disponÃ­vel no horÃ¡rio selecionado.	 ° 7  8³ 3006µ 6Conflito de agendamento. O horÃ¡rio jÃ¡ estÃ¡ ocupado.	 · 8  9º 3007¼ $Falha no processamento do pagamento.	 ¾ 9  :Á 3008Ã *CÃ³digo promocional invÃ¡lido ou expirado.	 Å :  ;È 3009Ê #Falha ao fazer upload do documento.	 Ì ;  <Ï 3010Ñ Formato de documento invÃ¡lido.	 Ó <  =Ö 4000Ø O campo '%s' Ã© obrigatÃ³rio.	 Ú =  >Ý 4001ß &O campo '%s' possui formato invÃ¡lido.	 á >  ?ä 4002æ /O campo '%s' deve ter no mÃ­nimo %d caracteres.	 è ?  @ë 4003í /O campo '%s' deve ter no mÃ¡ximo %d caracteres.	 ï @  Aò 4004ô  O e-mail fornecido Ã© invÃ¡lido.	 ö A  Bù 4005û O CPF fornecido Ã© invÃ¡lido.	 ý B  C  4006 O CNPJ fornecido Ã© invÃ¡lido.	  C  D 4007	 A senha Ã© muito fraca.	  D  E 4008  A data nÃ£o pode ser no passado.	  E  F 4009 "Valor invÃ¡lido para o campo '%s'.	  F 	  J K LineNumberTable LocalVariableTable
  V  (Ljava/lang/String;I)V	 " G H	 $ I H this 
$enum$name 
$enum$ordinal MethodParameters getFormattedMessage '([Ljava/lang/Object;)Ljava/lang/String;
,.- java/lang/String/0 format 9(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; args [Ljava/lang/Object; getCode ()Ljava/lang/String; RuntimeInvisibleAnnotations Llombok/Generated; 
getMessage values ;()[Lbr/com/legalconnect/gateway/config/exception/ErrorCode;
;=< java/lang/System>? 	arraycopy *(Ljava/lang/Object;ILjava/lang/Object;II)V valueOf L(Ljava/lang/String;)Lbr/com/legalconnect/gateway/config/exception/ErrorCode;
 C@D 5(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum; name 
SourceFile ErrorCode.java 	Signature JLjava/lang/Enum<Lbr/com/legalconnect/gateway/config/exception/ErrorCode;>;@1     D@    @    @    @ 	   @ 
   @    @    @ 
   @    @    @    @    @    @    @    @    @    @    @    @    @    @    @    @    @    @    @     @ !   @ "   @ #   @ $   @ %   @ &   @ '   @ (   @ )   @ *   @ +   @ ,   @ -   @ .   @ /   @ 0   @ 1   @ 2   @ 3   @ 4   @ 5   @ 6   @ 7   @ 8   @ 9   @ :   @ ;   @ <   @ =   @ >   @ ?   @ @   @ A   @ B   @ C   @ D   @ E   @ F     G H    I H   J K     L M  N       Î» YOPR· T³ X» YZ[]· T³ _» Yabd· T³ f» Yhik· T³ m» Yopr· T³ t» Yvwy· T³ {» Y}~· T³ » Y· T³ » Y· T³ » Y	· T³ » Y
· T³ » Y ¡£· T³ ¥» Y§¨ª· T³ ¬» Y®
¯±· T³ ³» Yµ¶¸· T³ º» Y¼½¿· T³ Á» YÃÄÆ· T³ È» YÊËÍ· T³ Ï» YÑÒÔ· T³ Ö» YØÙÛ· T³ Ý» Yßàâ· T³ ä» Yæçé· T³ ë» Yíîð· T³ ò» Yôõ÷· T³ ù» Yûüþ· T³ » Y· T³» Y	
· T³» Y· T³» Y· T³» Y!· T³#» Y%&(· T³*» Y,-/· T³1» Y3 46· T³8» Y:!;=· T³?» YA"BD· T³F» YH#IK· T³M» YO$PR· T³T» YV%WY· T³[» Y]&^`· T³b» Yd'eg· T³i» Yk(ln· T³p» Yr)su· T³w» Yy*z|· T³~» Y+· T³» Y,· T³» Y-· T³» Y.· T³» Y/· T³¡» Y£0¤¦· T³¨» Yª1«­· T³¯» Y±2²´· T³¶» Y¸3¹»· T³½» Y¿4ÀÂ· T³Ä» YÆ5ÇÉ· T³Ë» YÍ6ÎÐ· T³Ò» YÔ7Õ×· T³Ù» YÛ8ÜÞ· T³à» Yâ9ãå· T³ç» Yé:êì· T³î» Yð;ñó· T³õ» Y÷<øú· T³ü» Yþ=ÿ· T³» Y>· T³
» Y?
· T³» Y@· T³A½ Y² XSY² _SY² fSY² mSY² tSY² {SY² SY² SY² SY	² SY
² SY² ¥SY² ¬SY
² ³SY² ºSY² ÁSY² ÈSY² ÏSY² ÖSY² ÝSY² äSY² ëSY² òSY² ùSY² SY²SY²SY²SY²SY²#SY²*SY²1SY ²8SY!²?SY"²FSY#²MSY$²TSY%²[SY&²bSY'²iSY(²pSY)²wSY*²~SY+²SY,²SY-²SY.²SY/²¡SY0²¨SY1²¯SY2²¶SY3²½SY4²ÄSY5²ËSY6²ÒSY7²ÙSY8²àSY9²çSY:²îSY;²õSY<²üSY=²SY>²
SY?²SY@²S³±     * J        "  3  :  D  U  f  x      ®  ¶  À   Ò ! ä " ö # % & ', )4 *> +P -X .b /t 0 1 2ª 3¼ 4Ñ 5æ 6û 7 9 :% ;: <O =d >y ? @£ A¸ BÍ Câ D÷ E F! G6 HK K` Lu M N O´ PÉ QÞ Ró S T U2 W; YG Z\ [q \ ] ^° _Å `Ú aï b        V W  N   \     *+·*-µ!*µ#±          m  n  o  p        %       G H     I H (   & '  G   I   )*  N   =     	*´#+¸+°          x       	%      	12 (   1   34 5    6   N   /     *´!°                 %    74 5    6   N   /     *´#°                 %    	89  N   6     ²YK*¾Y<½ YM¸:,°                	@A  N   *     
*¸BÀ °               (   E  F   GH   I
```
```java
Êþº¾   = W  Cbr/com/legalconnect/gateway/config/exception/GlobalExceptionHandler  java/lang/Object <init> ()V Code
  	   LineNumberTable LocalVariableTable this ELbr/com/legalconnect/gateway/config/exception/GlobalExceptionHandler; handleBusinessException (Lbr/com/legalconnect/gateway/config/exception/BusinessException;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono; 	Signature ù(Lbr/com/legalconnect/gateway/config/exception/BusinessException;Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<Lbr/com/legalconnect/gateway/config/exception/BaseResponse;>;>; RuntimeVisibleAnnotations :Lorg/springframework/web/bind/annotation/ExceptionHandler; value @Lbr/com/legalconnect/gateway/config/exception/BusinessException;
    9br/com/legalconnect/gateway/config/exception/BaseResponse   builder Q()Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder;	    7br/com/legalconnect/gateway/config/enums/StatusResponse   ! ERRO 9Lbr/com/legalconnect/gateway/config/enums/StatusResponse;
 # % $ Mbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder & ' status (Lbr/com/legalconnect/gateway/config/enums/StatusResponse;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder;
 ) + * >br/com/legalconnect/gateway/config/exception/BusinessException , - 
getMessage ()Ljava/lang/String;
 # / 0 1 message c(Ljava/lang/String;)Lbr/com/legalconnect/gateway/config/exception/BaseResponse$BaseResponseBuilder;
 # 3 4 5 build =()Lbr/com/legalconnect/gateway/config/exception/BaseResponse;
 ) 7 8 9 
getHttpStatus '()Lorg/springframework/http/HttpStatus;
 ; = < 'org/springframework/http/ResponseEntity & > `(Lorg/springframework/http/HttpStatusCode;)Lorg/springframework/http/ResponseEntity$BodyBuilder; @ B A 3org/springframework/http/ResponseEntity$BodyBuilder C D body =(Ljava/lang/Object;)Lorg/springframework/http/ResponseEntity;
 F H G reactor/core/publisher/Mono I J just 1(Ljava/lang/Object;)Lreactor/core/publisher/Mono; ex exchange 2Lorg/springframework/web/server/ServerWebExchange; response ;Lbr/com/legalconnect/gateway/config/exception/BaseResponse; MethodParameters 
SourceFile GlobalExceptionHandler.java >Lorg/springframework/web/bind/annotation/RestControllerAdvice; InnerClasses BaseResponseBuilder BodyBuilder !               /     *· ±    
                 
                   [ c          %¸ ² ¶ "+¶ (¶ .¶ 2N+¶ 6¸ :-¹ ? ¸ E°    
   "       	          !     *    %  
     % K     % L M    N O  P   	 K   L    Q    R      S   T     #  U 	 @ ; V	
```
```java
Êþº¾   =   2br/com/legalconnect/gateway/util/AuthFilter$Config  java/lang/Object <init> ()V Code
  	   LineNumberTable LocalVariableTable this 4Lbr/com/legalconnect/gateway/util/AuthFilter$Config; 
SourceFile AuthFilter.java InnerClasses  +br/com/legalconnect/gateway/util/AuthFilter Config NestHost !               /     *· ±    
       Y          
            
     	     
```
```java
Êþº¾   =O  +br/com/legalconnect/gateway/util/AuthFilter  Morg/springframework/cloud/gateway/filter/factory/AbstractGatewayFilterFactory log Lorg/slf4j/Logger; RuntimeInvisibleAnnotations Llombok/Generated; 	secretKey Ljava/lang/String; RuntimeVisibleAnnotations 4Lorg/springframework/beans/factory/annotation/Value; value &${application.security.jwt.secret-key} <clinit> ()V Code
    org/slf4j/LoggerFactory   	getLogger %(Ljava/lang/Class;)Lorg/slf4j/Logger;	     LineNumberTable LocalVariableTable <init>  2br/com/legalconnect/gateway/util/AuthFilter$Config
     ! (Ljava/lang/Class;)V this -Lbr/com/legalconnect/gateway/util/AuthFilter; apply n(Lbr/com/legalconnect/gateway/util/AuthFilter$Config;)Lorg/springframework/cloud/gateway/filter/GatewayFilter;   ' ( ) filter g(Lbr/com/legalconnect/gateway/util/AuthFilter;)Lorg/springframework/cloud/gateway/filter/GatewayFilter; config 4Lbr/com/legalconnect/gateway/util/AuthFilter$Config; MethodParameters extractAllClaims ,(Ljava/lang/String;)Lio/jsonwebtoken/Claims;	  0 	 
	 2 4 3 !java/nio/charset/StandardCharsets 5 6 UTF_8 Ljava/nio/charset/Charset;
 8 : 9 java/lang/String ; < getBytes (Ljava/nio/charset/Charset;)[B
 > @ ? io/jsonwebtoken/security/Keys A B 
hmacShaKeyFor ([B)Ljavax/crypto/SecretKey;
 D F E io/jsonwebtoken/Jwts G H parser $()Lio/jsonwebtoken/JwtParserBuilder; J L K  io/jsonwebtoken/JwtParserBuilder M N 
verifyWith <(Ljavax/crypto/SecretKey;)Lio/jsonwebtoken/JwtParserBuilder; J P Q R build ()Lio/jsonwebtoken/JwtParser; T V U io/jsonwebtoken/JwtParser W X parseSignedClaims /(Ljava/lang/CharSequence;)Lio/jsonwebtoken/Jws; Z \ [ io/jsonwebtoken/Jws ] ^ 
getPayload ()Ljava/lang/Object; ` io/jsonwebtoken/Claims token key Ljavax/crypto/SecretKey; isTokenExpired (Ljava/lang/String;)Z
  g h i extractExpiration $(Ljava/lang/String;)Ljava/util/Date; k java/util/Date
 j m  
 j o p q before (Ljava/util/Date;)Z s Token expirado em: {} u w v org/slf4j/Logger x y debug '(Ljava/lang/String;Ljava/lang/Object;)V 
expiration Ljava/util/Date; expired Z 
StackMapTable   $  ()Ljava/util/function/Function;
     extractClaim C(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; extractUsername &(Ljava/lang/String;)Ljava/lang/String;    %Erro ao extrair username do token: {}
    java/lang/Exception   
getMessage ()Ljava/lang/String; u   y warn e Ljava/lang/Exception; 	Signature g<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/util/function/Function<Lio/jsonwebtoken/Claims;TT;>;)TT;
   - .    java/util/function/Function $  &(Ljava/lang/Object;)Ljava/lang/Object; claimsResolver Ljava/util/function/Function; claims Lio/jsonwebtoken/Claims; LocalVariableTypeTable :Ljava/util/function/Function<Lio/jsonwebtoken/Claims;TT;>; L(Ljava/lang/Object;)Lorg/springframework/cloud/gateway/filter/GatewayFilter;
  § $ % lambda$0 (Lorg/springframework/web/server/ServerWebExchange;Lorg/springframework/cloud/gateway/filter/GatewayFilterChain;)Lreactor/core/publisher/Mono; « ­ ¬ 0org/springframework/web/server/ServerWebExchange ® ¯ 
getRequest >()Lorg/springframework/http/server/reactive/ServerHttpRequest; ± ³ ² :org/springframework/http/server/reactive/ServerHttpRequest ´ µ 
getHeaders (()Lorg/springframework/http/HttpHeaders; · $org/springframework/http/HttpHeaders ¹ 
Authorization
 ¶ » ¼  getFirst ¾ Bearer 
 8 À Á e 
startsWith Ã >br/com/legalconnect/gateway/config/exception/BusinessException	 Å Ç Æ 6br/com/legalconnect/gateway/config/exception/ErrorCode È É USER_NOT_FOUND 8Lbr/com/legalconnect/gateway/config/exception/ErrorCode; Ë Token nÃ£o encontrado
 Â Í  Î N(Lbr/com/legalconnect/gateway/config/exception/ErrorCode;[Ljava/lang/String;)V
 8 Ð Ñ Ò 	substring (I)Ljava/lang/String;
 8 Ô Õ Ö isBlank ()Z
  Ø d e	 Å Ú Û É 
TOKEN_EXPIRED Ý Token expirado ß X-Correlation-ID _ á â ã get 7(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; å X-Tenant-ID ç )X-Correlation-ID nÃ£o encontrado no token	 Å é ê É TENANT_NOT_FOUND ì !tenantId nÃ£o encontrado no token « î ï ð mutate <()Lorg/springframework/web/server/ServerWebExchange$Builder;  ò ó ô accept C(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Consumer; ö ø ÷ 8org/springframework/web/server/ServerWebExchange$Builder ù ú request Y(Ljava/util/function/Consumer;)Lorg/springframework/web/server/ServerWebExchange$Builder; ö ü Q ý 4()Lorg/springframework/web/server/ServerWebExchange; ÿ  ;org/springframework/cloud/gateway/filter/GatewayFilterChain ( Q(Lorg/springframework/web/server/ServerWebExchange;)Lreactor/core/publisher/Mono; Erro ao processar token JWT: {} u y error	 Å	
 É 
INVALID_TOKEN Token invÃ¡lido ou malformado exchange 2Lorg/springframework/web/server/ServerWebExchange; chain =Lorg/springframework/cloud/gateway/filter/GatewayFilterChain; 
authHeader 
correlationId tenantId mutated lambda$1 k(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;)V Borg/springframework/http/server/reactive/ServerHttpRequest$Builder header k(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder; builder DLorg/springframework/http/server/reactive/ServerHttpRequest$Builder; 
SourceFile AuthFilter.java Lorg/springframework/cloud/gateway/filter/factory/AbstractGatewayFilterFactory<Lbr/com/legalconnect/gateway/util/AuthFilter$Config;>; *Lorg/springframework/stereotype/Component; BootstrapMethods
%'& "java/lang/invoke/LambdaMetafactory() metafactory Ì(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;$ ©
 - ¨ ©, ©  _234 
getExpiration ()Ljava/util/Date;	1 *(Lio/jsonwebtoken/Claims;)Ljava/util/Date;6  _:;  
getSubject	9 ,(Lio/jsonwebtoken/Claims;)Ljava/lang/String;= (Ljava/lang/Object;)V?
 BA G(Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;)VD InnerClasses ConfigI %java/lang/invoke/MethodHandles$LookupK java/lang/invoke/MethodHandles Lookup Builder NestMembers !                   	 
         
s          )      	¸ ³ ±                         5     *· ±       
    "  $         " #    $ %     ;     *º &  °           (         " #      * +  ,    *    - .          +*´ /² 1¶ 7¸ =M¸ C,¹ I ¹ O +¹ S ¹ Y À _°           ]  ^  _  `  a " b * ^         + " #     + a 
    b c  ,    a    d e          #*+¶ fM,» jY· l¶ n> ² r,¹ t ¬           l  m  n  o ! q    *    # " #     # a 
    z {    | }  ~   	 ý ! j ,    a     h i     B     *+º   ¶ À j°           {         " #      a 
  ,    a          }     *+º   ¶ À 8°M² ,¶ ¹  °    
                           " #      a 
       ~    N  ,    a               l     *+¶ N,-¹  °       
          *     " #      a 
           ¡ ¢  £         ¤  ,   	 a     A $ ¥     )     	*+À ¶ ¦°                  ¨ ©    J  	  ++¹ ª ¹ ° ¸¶ ºN-Æ -½¶ ¿ » ÂY² Ä½ 8YÊS· Ì¿-¶ Ï:Æ ¶ Ó » ÂY² Ä½ 8YÊS· Ì¿*¶ :*¶ × » ÂY² Ù½ 8YÜS· Ì¿Þ8¹ à À 8:ä8¹ à À 8:Æ ¶ Ó » ÂY² Ä½ 8YæS· Ì¿Æ ¶ Ó » ÂY² è½ 8YëS· Ì¿+¹ í º ñ  ¹ õ ¹ û :,¹ þ °N² -¶ ¹ » ÂY²½ 8YS· Ì¿         ^    *  ,  - 2 0 : 2 G 3 [ 6 c 7 l 8  :  ;   = ­ > Á A Î B â E è F ö K û E ý M O P T    f 
  + " #    +
   +   õ 
  : Ì a 
  c £ ¡ ¢   v 
    f 
  ý 	  $    ~   5 
ü  8ü  8ü $ _ý , 8 8ÿ #   « ÿ  
     U     #,Þ½ 8Y*S¹ W,ä½ 8Y+S¹ W±           G  H " J        #          !     "  #   * * +./* 057* 8<>* @CEF   "   G 	HJL  ±M	 ö «M	N     
```
```java
br\com\legalconnect\gateway\config\exception\GlobalExceptionHandler.class
br\com\legalconnect\gateway\util\AuthFilter.class
br\com\legalconnect\gateway\config\exception\BusinessException.class
br\com\legalconnect\gateway\config\exception\BaseResponse$BaseResponseBuilder.class
br\com\legalconnect\gateway\util\AuthFilter$Config.class
br\com\legalconnect\gateway\config\exception\ErrorCode.class
br\com\legalconnect\gateway\config\exception\BaseResponse.class
br\com\legalconnect\gateway\LegalconnectGatewayApplication.class
br\com\legalconnect\gateway\config\enums\StatusResponse.class

```
```java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\config\exception\BusinessException.java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\LegalconnectGatewayApplication.java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\config\enums\StatusResponse.java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\config\exception\BaseResponse.java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\util\AuthFilter.java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\config\exception\ErrorCode.java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\main\java\br\com\legalconnect\gateway\config\exception\GlobalExceptionHandler.java

```
```java
br\com\legalconnect\common\common_lib\CommonLibApplicationTests.class

```
```java
E:\legalconnect\legalconnect\microservices\legal-gaateway\src\test\java\br\com\legalconnect\common\common_lib\CommonLibApplicationTests.java

```
```java
# Created at 2025-07-26T08:38:07.418
Boot Manifest-JAR contains absolute paths in classpath 'E:\legalconnect\legalconnect\microservices\legal-gaateway\target\test-classes'
Hint: <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
'other' has different root


```
```java
-------------------------------------------------------------------------------
Test set: br.com.legalconnect.common.common_lib.CommonLibApplicationTests
-------------------------------------------------------------------------------
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.387 s <<< FAILURE! -- in br.com.legalconnect.common.common_lib.CommonLibApplicationTests
br.com.legalconnect.common.common_lib.CommonLibApplicationTests -- Time elapsed: 0.387 s <<< ERROR!
java.lang.IllegalStateException: Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes=...) with your test
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.findConfigurationClass(SpringBootTestContextBootstrapper.java:246)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:233)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.processMergedContextConfiguration(SpringBootTestContextBootstrapper.java:150)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:351)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:267)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:215)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildTestContext(AbstractTestContextBootstrapper.java:108)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.buildTestContext(SpringBootTestContextBootstrapper.java:111)
	at org.springframework.test.context.TestContextManager.<init>(TestContextManager.java:142)
	at org.springframework.test.context.TestContextManager.<init>(TestContextManager.java:126)
	at org.springframework.test.context.junit.jupiter.SpringExtension.getTestContextManager(SpringExtension.java:366)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeAll(SpringExtension.java:131)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)


```
```java
<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="br.com.legalconnect.common.common_lib.CommonLibApplicationTests" time="0.387" tests="1" errors="1" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="E:\legalconnect\legalconnect\microservices\legal-gaateway\target\test-classes;E:\legalconnect\legalconnect\microservices\legal-gaateway\target\classes;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-gateway\4.1.5\spring-cloud-starter-gateway-4.1.5.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.4\spring-cloud-starter-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.4\spring-cloud-context-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-rsa\1.1.3\spring-security-rsa-1.1.3.jar;C:\Users\marce\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.78\bcprov-jdk18on-1.78.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-gateway-server\4.1.5\spring-cloud-gateway-server-4.1.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.5\spring-boot-starter-validation-3.2.5.jar;C:\Users\marce\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.20\tomcat-embed-el-10.1.20.jar;C:\Users\marce\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\marce\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\marce\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\marce\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\marce\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.1\reactor-extra-3.5.1.jar;C:\Users\marce\.m2\repository\io\projectreactor\reactor-core\3.6.5\reactor-core-3.6.5.jar;C:\Users\marce\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.2.5\spring-boot-starter-webflux-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.5\spring-boot-starter-json-3.2.5.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.2.5\spring-boot-starter-reactor-netty-3.2.5.jar;C:\Users\marce\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.1.18\reactor-netty-http-1.1.18.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-http\4.1.109.Final\netty-codec-http-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-common\4.1.109.Final\netty-common-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-buffer\4.1.109.Final\netty-buffer-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport\4.1.109.Final\netty-transport-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec\4.1.109.Final\netty-codec-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-handler\4.1.109.Final\netty-handler-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-http2\4.1.109.Final\netty-codec-http2-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver-dns\4.1.109.Final\netty-resolver-dns-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver\4.1.109.Final\netty-resolver-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-dns\4.1.109.Final\netty-codec-dns-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.109.Final\netty-resolver-dns-native-macos-4.1.109.Final-osx-x86_64.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.109.Final\netty-resolver-dns-classes-macos-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport-native-epoll\4.1.109.Final\netty-transport-native-epoll-4.1.109.Final-linux-x86_64.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.109.Final\netty-transport-native-unix-common-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.109.Final\netty-transport-classes-epoll-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.1.18\reactor-netty-core-1.1.18.jar;C:\Users\marce\.m2\repository\io\netty\netty-handler-proxy\4.1.109.Final\netty-handler-proxy-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-socks\4.1.109.Final\netty-codec-socks-4.1.109.Final.jar;C:\Users\marce\.m2\repository\org\springframework\spring-webflux\6.1.6\spring-webflux-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-netflix-eureka-client\4.1.3\spring-cloud-starter-netflix-eureka-client-4.1.3.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-netflix-eureka-client\4.1.3\spring-cloud-netflix-eureka-client-4.1.3.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.3\httpclient5-5.2.3.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.4\httpcore5-5.2.4.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.4\httpcore5-h2-5.2.4.jar;C:\Users\marce\.m2\repository\com\netflix\eureka\eureka-client\2.0.3\eureka-client-2.0.3.jar;C:\Users\marce\.m2\repository\com\thoughtworks\xstream\xstream\1.4.20\xstream-1.4.20.jar;C:\Users\marce\.m2\repository\io\github\x-stream\mxparser\1.2.2\mxparser-1.2.2.jar;C:\Users\marce\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\marce\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\marce\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\marce\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\marce\.m2\repository\com\netflix\spectator\spectator-api\1.7.3\spectator-api-1.7.3.jar;C:\Users\marce\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\httpclient\4.5.3\httpclient-4.5.3.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\marce\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\marce\.m2\repository\commons-configuration\commons-configuration\1.10\commons-configuration-1.10.jar;C:\Users\marce\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\marce\.m2\repository\com\netflix\netflix-commons\netflix-eventbus\0.3.0\netflix-eventbus-0.3.0.jar;C:\Users\marce\.m2\repository\com\netflix\netflix-commons\netflix-infix\0.3.0\netflix-infix-0.3.0.jar;C:\Users\marce\.m2\repository\commons-jxpath\commons-jxpath\1.3\commons-jxpath-1.3.jar;C:\Users\marce\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar;C:\Users\marce\.m2\repository\org\antlr\antlr-runtime\3.4\antlr-runtime-3.4.jar;C:\Users\marce\.m2\repository\org\antlr\stringtemplate\3.2.1\stringtemplate-3.2.1.jar;C:\Users\marce\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\marce\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\marce\.m2\repository\com\netflix\servo\servo-core\0.5.3\servo-core-0.5.3.jar;C:\Users\marce\.m2\repository\org\apache\commons\commons-math\2.2\commons-math-2.2.jar;C:\Users\marce\.m2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;C:\Users\marce\.m2\repository\org\codehaus\jettison\jettison\1.5.4\jettison-1.5.4.jar;C:\Users\marce\.m2\repository\com\netflix\eureka\eureka-core\2.0.3\eureka-core-2.0.3.jar;C:\Users\marce\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.2.1\woodstox-core-6.2.1.jar;C:\Users\marce\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\marce\.m2\repository\com\google\guava\guava\33.0.0-jre\guava-33.0.0-jre.jar;C:\Users\marce\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\marce\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\marce\.m2\repository\org\checkerframework\checker-qual\3.41.0\checker-qual-3.41.0.jar;C:\Users\marce\.m2\repository\com\google\errorprone\error_prone_annotations\2.23.0\error_prone_annotations-2.23.0.jar;C:\Users\marce\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-loadbalancer\4.1.4\spring-cloud-starter-loadbalancer-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-loadbalancer\4.1.4\spring-cloud-loadbalancer-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-cache\3.2.5\spring-boot-starter-cache-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\spring-context-support\6.1.6\spring-context-support-6.1.6.jar;C:\Users\marce\.m2\repository\com\stoyanr\evictor\1.0.0\evictor-1.0.0.jar;C:\Users\marce\.m2\repository\org\springdoc\springdoc-openapi-starter-webflux-ui\2.0.2\springdoc-openapi-starter-webflux-ui-2.0.2.jar;C:\Users\marce\.m2\repository\org\springdoc\springdoc-openapi-starter-webflux-api\2.0.2\springdoc-openapi-starter-webflux-api-2.0.2.jar;C:\Users\marce\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\marce\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\marce\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\marce\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\marce\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.4\jackson-dataformat-yaml-2.15.4.jar;C:\Users\marce\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\marce\.m2\repository\org\webjars\webjars-locator-core\0.55\webjars-locator-core-0.55.jar;C:\Users\marce\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Users\marce\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.6\jjwt-api-0.12.6.jar;C:\Users\marce\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.6\jjwt-impl-0.12.6.jar;C:\Users\marce\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.6\jjwt-jackson-0.12.6.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-openfeign\4.1.3\spring-cloud-starter-openfeign-4.1.3.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-openfeign-core\4.1.3\spring-cloud-openfeign-core-4.1.3.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.5\spring-boot-autoconfigure-3.2.5.jar;C:\Users\marce\.m2\repository\io\github\openfeign\form\feign-form-spring\3.8.0\feign-form-spring-3.8.0.jar;C:\Users\marce\.m2\repository\io\github\openfeign\form\feign-form\3.8.0\feign-form-3.8.0.jar;C:\Users\marce\.m2\repository\commons-fileupload\commons-fileupload\1.5\commons-fileupload-1.5.jar;C:\Users\marce\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\marce\.m2\repository\org\springframework\spring-web\6.1.6\spring-web-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-beans\6.1.6\spring-beans-6.1.6.jar;C:\Users\marce\.m2\repository\io\micrometer\micrometer-observation\1.12.5\micrometer-observation-1.12.5.jar;C:\Users\marce\.m2\repository\io\micrometer\micrometer-commons\1.12.5\micrometer-commons-1.12.5.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.4\spring-cloud-commons-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-crypto\6.2.4\spring-security-crypto-6.2.4.jar;C:\Users\marce\.m2\repository\io\github\openfeign\feign-core\13.3\feign-core-13.3.jar;C:\Users\marce\.m2\repository\io\github\openfeign\feign-slf4j\13.3\feign-slf4j-13.3.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.5\spring-boot-starter-test-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.5\spring-boot-starter-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.5\spring-boot-starter-logging-3.2.5.jar;C:\Users\marce\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\marce\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\marce\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\marce\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\marce\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\marce\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-test\3.2.5\spring-boot-test-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.5\spring-boot-test-autoconfigure-3.2.5.jar;C:\Users\marce\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\marce\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\marce\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\marce\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\marce\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\marce\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\marce\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\marce\.m2\repository\net\bytebuddy\byte-buddy\1.14.13\byte-buddy-1.14.13.jar;C:\Users\marce\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\marce\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\marce\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\marce\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\marce\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\marce\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\marce\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\marce\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar;C:\Users\marce\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\marce\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\marce\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\marce\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\marce\.m2\repository\org\springframework\spring-core\6.1.6\spring-core-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-jcl\6.1.6\spring-jcl-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-test\6.1.6\spring-test-6.1.6.jar;C:\Users\marce\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-test\6.2.4\spring-security-test-6.2.4.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-core\6.2.4\spring-security-core-6.2.4.jar;C:\Users\marce\.m2\repository\org\springframework\spring-aop\6.1.6\spring-aop-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-context\6.1.6\spring-context-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-expression\6.1.6\spring-expression-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-web\6.2.4\spring-security-web-6.2.4.jar;C:\Users\marce\.m2\repository\org\projectlombok\lombok\1.18.20\lombok-1.18.20.jar;"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Users\marce\.jdks\corretto-17.0.14\bin"/>
    <property name="sun.java.command" value="C:\Users\marce\AppData\Local\Temp\surefire2990045693632684528\surefirebooter-20250726083807353_3.jar C:\Users\marce\AppData\Local\Temp\surefire2990045693632684528 2025-07-26T08-38-07_161-jvmRun1 surefire-20250726083807353_1tmp surefire_0-20250726083807353_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="E:\legalconnect\legalconnect\microservices\legal-gaateway\target\test-classes;E:\legalconnect\legalconnect\microservices\legal-gaateway\target\classes;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-gateway\4.1.5\spring-cloud-starter-gateway-4.1.5.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter\4.1.4\spring-cloud-starter-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-context\4.1.4\spring-cloud-context-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-rsa\1.1.3\spring-security-rsa-1.1.3.jar;C:\Users\marce\.m2\repository\org\bouncycastle\bcprov-jdk18on\1.78\bcprov-jdk18on-1.78.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-gateway-server\4.1.5\spring-cloud-gateway-server-4.1.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.5\spring-boot-starter-validation-3.2.5.jar;C:\Users\marce\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.20\tomcat-embed-el-10.1.20.jar;C:\Users\marce\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\marce\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\marce\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\marce\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\marce\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.1\reactor-extra-3.5.1.jar;C:\Users\marce\.m2\repository\io\projectreactor\reactor-core\3.6.5\reactor-core-3.6.5.jar;C:\Users\marce\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.2.5\spring-boot-starter-webflux-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.5\spring-boot-starter-json-3.2.5.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.4\jackson-datatype-jdk8-2.15.4.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.4\jackson-datatype-jsr310-2.15.4.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.4\jackson-module-parameter-names-2.15.4.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.2.5\spring-boot-starter-reactor-netty-3.2.5.jar;C:\Users\marce\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.1.18\reactor-netty-http-1.1.18.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-http\4.1.109.Final\netty-codec-http-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-common\4.1.109.Final\netty-common-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-buffer\4.1.109.Final\netty-buffer-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport\4.1.109.Final\netty-transport-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec\4.1.109.Final\netty-codec-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-handler\4.1.109.Final\netty-handler-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-http2\4.1.109.Final\netty-codec-http2-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver-dns\4.1.109.Final\netty-resolver-dns-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver\4.1.109.Final\netty-resolver-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-dns\4.1.109.Final\netty-codec-dns-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.109.Final\netty-resolver-dns-native-macos-4.1.109.Final-osx-x86_64.jar;C:\Users\marce\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.109.Final\netty-resolver-dns-classes-macos-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport-native-epoll\4.1.109.Final\netty-transport-native-epoll-4.1.109.Final-linux-x86_64.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.109.Final\netty-transport-native-unix-common-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.109.Final\netty-transport-classes-epoll-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.1.18\reactor-netty-core-1.1.18.jar;C:\Users\marce\.m2\repository\io\netty\netty-handler-proxy\4.1.109.Final\netty-handler-proxy-4.1.109.Final.jar;C:\Users\marce\.m2\repository\io\netty\netty-codec-socks\4.1.109.Final\netty-codec-socks-4.1.109.Final.jar;C:\Users\marce\.m2\repository\org\springframework\spring-webflux\6.1.6\spring-webflux-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-netflix-eureka-client\4.1.3\spring-cloud-starter-netflix-eureka-client-4.1.3.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-netflix-eureka-client\4.1.3\spring-cloud-netflix-eureka-client-4.1.3.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.3\httpclient5-5.2.3.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.4\httpcore5-5.2.4.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.4\httpcore5-h2-5.2.4.jar;C:\Users\marce\.m2\repository\com\netflix\eureka\eureka-client\2.0.3\eureka-client-2.0.3.jar;C:\Users\marce\.m2\repository\com\thoughtworks\xstream\xstream\1.4.20\xstream-1.4.20.jar;C:\Users\marce\.m2\repository\io\github\x-stream\mxparser\1.2.2\mxparser-1.2.2.jar;C:\Users\marce\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\marce\.m2\repository\jakarta\ws\rs\jakarta.ws.rs-api\3.1.0\jakarta.ws.rs-api-3.1.0.jar;C:\Users\marce\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\marce\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\marce\.m2\repository\com\netflix\spectator\spectator-api\1.7.3\spectator-api-1.7.3.jar;C:\Users\marce\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\httpclient\4.5.3\httpclient-4.5.3.jar;C:\Users\marce\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\marce\.m2\repository\commons-codec\commons-codec\1.16.1\commons-codec-1.16.1.jar;C:\Users\marce\.m2\repository\commons-configuration\commons-configuration\1.10\commons-configuration-1.10.jar;C:\Users\marce\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.4\jackson-annotations-2.15.4.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.4\jackson-core-2.15.4.jar;C:\Users\marce\.m2\repository\com\netflix\netflix-commons\netflix-eventbus\0.3.0\netflix-eventbus-0.3.0.jar;C:\Users\marce\.m2\repository\com\netflix\netflix-commons\netflix-infix\0.3.0\netflix-infix-0.3.0.jar;C:\Users\marce\.m2\repository\commons-jxpath\commons-jxpath\1.3\commons-jxpath-1.3.jar;C:\Users\marce\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar;C:\Users\marce\.m2\repository\org\antlr\antlr-runtime\3.4\antlr-runtime-3.4.jar;C:\Users\marce\.m2\repository\org\antlr\stringtemplate\3.2.1\stringtemplate-3.2.1.jar;C:\Users\marce\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\marce\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;C:\Users\marce\.m2\repository\com\netflix\servo\servo-core\0.5.3\servo-core-0.5.3.jar;C:\Users\marce\.m2\repository\org\apache\commons\commons-math\2.2\commons-math-2.2.jar;C:\Users\marce\.m2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;C:\Users\marce\.m2\repository\org\codehaus\jettison\jettison\1.5.4\jettison-1.5.4.jar;C:\Users\marce\.m2\repository\com\netflix\eureka\eureka-core\2.0.3\eureka-core-2.0.3.jar;C:\Users\marce\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.2.1\woodstox-core-6.2.1.jar;C:\Users\marce\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\marce\.m2\repository\com\google\guava\guava\33.0.0-jre\guava-33.0.0-jre.jar;C:\Users\marce\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\marce\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\marce\.m2\repository\org\checkerframework\checker-qual\3.41.0\checker-qual-3.41.0.jar;C:\Users\marce\.m2\repository\com\google\errorprone\error_prone_annotations\2.23.0\error_prone_annotations-2.23.0.jar;C:\Users\marce\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-loadbalancer\4.1.4\spring-cloud-starter-loadbalancer-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-loadbalancer\4.1.4\spring-cloud-loadbalancer-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-cache\3.2.5\spring-boot-starter-cache-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\spring-context-support\6.1.6\spring-context-support-6.1.6.jar;C:\Users\marce\.m2\repository\com\stoyanr\evictor\1.0.0\evictor-1.0.0.jar;C:\Users\marce\.m2\repository\org\springdoc\springdoc-openapi-starter-webflux-ui\2.0.2\springdoc-openapi-starter-webflux-ui-2.0.2.jar;C:\Users\marce\.m2\repository\org\springdoc\springdoc-openapi-starter-webflux-api\2.0.2\springdoc-openapi-starter-webflux-api-2.0.2.jar;C:\Users\marce\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.0.2\springdoc-openapi-starter-common-2.0.2.jar;C:\Users\marce\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.7\swagger-core-jakarta-2.2.7.jar;C:\Users\marce\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\marce\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.7\swagger-annotations-jakarta-2.2.7.jar;C:\Users\marce\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.7\swagger-models-jakarta-2.2.7.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.4\jackson-dataformat-yaml-2.15.4.jar;C:\Users\marce\.m2\repository\org\webjars\swagger-ui\4.15.5\swagger-ui-4.15.5.jar;C:\Users\marce\.m2\repository\org\webjars\webjars-locator-core\0.55\webjars-locator-core-0.55.jar;C:\Users\marce\.m2\repository\io\github\classgraph\classgraph\4.8.149\classgraph-4.8.149.jar;C:\Users\marce\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.6\jjwt-api-0.12.6.jar;C:\Users\marce\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.6\jjwt-impl-0.12.6.jar;C:\Users\marce\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.6\jjwt-jackson-0.12.6.jar;C:\Users\marce\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.4\jackson-databind-2.15.4.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-starter-openfeign\4.1.3\spring-cloud-starter-openfeign-4.1.3.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-openfeign-core\4.1.3\spring-cloud-openfeign-core-4.1.3.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.5\spring-boot-autoconfigure-3.2.5.jar;C:\Users\marce\.m2\repository\io\github\openfeign\form\feign-form-spring\3.8.0\feign-form-spring-3.8.0.jar;C:\Users\marce\.m2\repository\io\github\openfeign\form\feign-form\3.8.0\feign-form-3.8.0.jar;C:\Users\marce\.m2\repository\commons-fileupload\commons-fileupload\1.5\commons-fileupload-1.5.jar;C:\Users\marce\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\marce\.m2\repository\org\springframework\spring-web\6.1.6\spring-web-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-beans\6.1.6\spring-beans-6.1.6.jar;C:\Users\marce\.m2\repository\io\micrometer\micrometer-observation\1.12.5\micrometer-observation-1.12.5.jar;C:\Users\marce\.m2\repository\io\micrometer\micrometer-commons\1.12.5\micrometer-commons-1.12.5.jar;C:\Users\marce\.m2\repository\org\springframework\cloud\spring-cloud-commons\4.1.4\spring-cloud-commons-4.1.4.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-crypto\6.2.4\spring-security-crypto-6.2.4.jar;C:\Users\marce\.m2\repository\io\github\openfeign\feign-core\13.3\feign-core-13.3.jar;C:\Users\marce\.m2\repository\io\github\openfeign\feign-slf4j\13.3\feign-slf4j-13.3.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.5\spring-boot-starter-test-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.5\spring-boot-starter-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot\3.2.5\spring-boot-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.5\spring-boot-starter-logging-3.2.5.jar;C:\Users\marce\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\marce\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\marce\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\marce\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\marce\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\marce\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-test\3.2.5\spring-boot-test-3.2.5.jar;C:\Users\marce\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.5\spring-boot-test-autoconfigure-3.2.5.jar;C:\Users\marce\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\marce\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\marce\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\marce\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\marce\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\marce\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\marce\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\marce\.m2\repository\net\bytebuddy\byte-buddy\1.14.13\byte-buddy-1.14.13.jar;C:\Users\marce\.m2\repository\org\awaitility\awaitility\4.2.1\awaitility-4.2.1.jar;C:\Users\marce\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.2\junit-jupiter-5.10.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.2\junit-jupiter-api-5.10.2.jar;C:\Users\marce\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\marce\.m2\repository\org\junit\platform\junit-platform-commons\1.10.2\junit-platform-commons-1.10.2.jar;C:\Users\marce\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.2\junit-jupiter-params-5.10.2.jar;C:\Users\marce\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.2\junit-jupiter-engine-5.10.2.jar;C:\Users\marce\.m2\repository\org\junit\platform\junit-platform-engine\1.10.2\junit-platform-engine-1.10.2.jar;C:\Users\marce\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\marce\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.13\byte-buddy-agent-1.14.13.jar;C:\Users\marce\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\marce\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\marce\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\marce\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\marce\.m2\repository\org\springframework\spring-core\6.1.6\spring-core-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-jcl\6.1.6\spring-jcl-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-test\6.1.6\spring-test-6.1.6.jar;C:\Users\marce\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-test\6.2.4\spring-security-test-6.2.4.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-core\6.2.4\spring-security-core-6.2.4.jar;C:\Users\marce\.m2\repository\org\springframework\spring-aop\6.1.6\spring-aop-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-context\6.1.6\spring-context-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\spring-expression\6.1.6\spring-expression-6.1.6.jar;C:\Users\marce\.m2\repository\org\springframework\security\spring-security-web\6.2.4\spring-security-web-6.2.4.jar;C:\Users\marce\.m2\repository\org\projectlombok\lombok\1.18.20\lombok-1.18.20.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\marce"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Users\marce\.jdks\corretto-17.0.14"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="E:\legalconnect\legalconnect\microservices\legal-gaateway"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\marce\AppData\Local\Temp\surefire2990045693632684528\surefirebooter-20250726083807353_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.14+7-LTS"/>
    <property name="user.name" value="marce"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.14.7.1"/>
    <property name="localRepository" value="C:\Users\marce\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="C:\Users\marce\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.14"/>
    <property name="user.dir" value="E:\legalconnect\legalconnect\microservices\legal-gaateway"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\marce\.jdks\corretto-17.0.14\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python313\Scripts\;C:\Python313\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\marce\AppData\Local\nvm;C:\nvm4w\nodejs;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\ProgramData\chocolatey\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Users\marce\.jbang\bin;C:\Users\marce\.local\bin;C:\Users\marce\AppData\Local\Microsoft\WindowsApps;C:\Users\marce\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\marce\AppData\Local\nvm;C:\nvm4w\nodejs;E:\dev\ambiente\apache-maven-3.9.9\bin;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Users\marce\.jdks\corretto-17.0.14\bin;;C:\Users\marce\AppData\Local\Programs\Ollama;c:\Users\marce\AppData\Roaming\Code\User\globalStorage\github.copilot-chat\debugCommand;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.14+7-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="" classname="br.com.legalconnect.common.common_lib.CommonLibApplicationTests" time="0.387">
    <error message="Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes=...) with your test" type="java.lang.IllegalStateException"><![CDATA[java.lang.IllegalStateException: Unable to find a @SpringBootConfiguration, you need to use @ContextConfiguration or @SpringBootTest(classes=...) with your test
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.findConfigurationClass(SpringBootTestContextBootstrapper.java:246)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:233)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.processMergedContextConfiguration(SpringBootTestContextBootstrapper.java:150)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:351)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:267)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:215)
	at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildTestContext(AbstractTestContextBootstrapper.java:108)
	at org.springframework.boot.test.context.SpringBootTestContextBootstrapper.buildTestContext(SpringBootTestContextBootstrapper.java:111)
	at org.springframework.test.context.TestContextManager.<init>(TestContextManager.java:142)
	at org.springframework.test.context.TestContextManager.<init>(TestContextManager.java:126)
	at org.springframework.test.context.junit.jupiter.SpringExtension.getTestContextManager(SpringExtension.java:366)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeAll(SpringExtension.java:131)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></error>
    <system-out><![CDATA[08:38:08.667 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [br.com.legalconnect.common.common_lib.CommonLibApplicationTests]: CommonLibApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
]]></system-out>
  </testcase>
</testsuite>
```
```java
Êþº¾   =   ?br/com/legalconnect/common/common_lib/CommonLibApplicationTests  java/lang/Object <init> ()V Code
  	   LineNumberTable LocalVariableTable this ALbr/com/legalconnect/common/common_lib/CommonLibApplicationTests; contextLoads RuntimeVisibleAnnotations Lorg/junit/jupiter/api/Test; 
SourceFile CommonLibApplicationTests.java 6Lorg/springframework/boot/test/context/SpringBootTest;                  /     *· ±    
                 
                   +      ±    
                 
                
```